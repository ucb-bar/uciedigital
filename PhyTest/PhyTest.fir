FIRRTL version 1.2.0
circuit PhyTest :
  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_1 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_2 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_3 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_1 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_2 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_3 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_4 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_4 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_5 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_5 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_1 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_1 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_6 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_6 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_2 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_2 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_7 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_7 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_3 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_3 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_1 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_2 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_3 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_8 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_9 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_10 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_11 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_8 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_9 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_10 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_11 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_12 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_12 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_4 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_4 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_13 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_13 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_5 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_5 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_14 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_14 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_6 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_6 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_15 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_15 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_7 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_7 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_1 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_4 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_5 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_6 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_7 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_16 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_17 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_18 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_19 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_16 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_17 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_18 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_19 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_20 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_20 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_8 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_8 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_21 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_21 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_9 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_9 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_22 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_22 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_10 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_10 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_23 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_23 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_11 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_11 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_2 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_8 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_9 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_10 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_11 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_24 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_25 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_26 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_27 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_24 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_25 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_26 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_27 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_28 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_28 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_12 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_12 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_29 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_29 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_13 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_13 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_30 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_30 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_14 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_14 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_31 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_31 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_15 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_15 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_1 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_3 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_1 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_12 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_13 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_14 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_15 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_1 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_1 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_1 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_32 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_33 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_34 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_35 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_32 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_33 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_34 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_35 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_36 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_16 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_36 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_16 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_16 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_37 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_17 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_37 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_17 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_17 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_38 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_18 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_38 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_18 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_18 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_39 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_19 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_39 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_19 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_19 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_4 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_16 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_17 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_18 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_19 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_40 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_41 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_42 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_43 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_40 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_41 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_42 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_43 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_44 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_20 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_44 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_20 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_20 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_45 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_21 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_45 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_21 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_21 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_46 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_22 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_46 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_22 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_22 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_47 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_23 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_47 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_23 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_23 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_2 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_5 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_2 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_20 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_21 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_22 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_23 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_2 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_2 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_2 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_48 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_49 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_50 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_51 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_48 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_49 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_50 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_51 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_52 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_24 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_52 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_24 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_24 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_53 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_25 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_53 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_25 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_25 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_54 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_26 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_54 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_26 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_26 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_55 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_27 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_55 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_27 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_27 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_6 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_24 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_25 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_26 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_27 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_56 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_57 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_58 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_59 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_56 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_57 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_58 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_59 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_60 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_28 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_60 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_28 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_28 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_61 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_29 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_61 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_29 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_29 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_62 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_30 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_62 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_30 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_30 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_63 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_31 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_63 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_31 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_31 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_3 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_7 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_3 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_28 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_29 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_30 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_31 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_3 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_3 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_3 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_64 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_65 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_66 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_67 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_64 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_65 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_66 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_67 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_68 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_32 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_68 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_32 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_32 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_69 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_33 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_69 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_33 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_33 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_70 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_34 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_70 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_34 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_34 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_71 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_35 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_71 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_35 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_35 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_8 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_32 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_33 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_34 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_35 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_72 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_73 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_74 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_75 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_72 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_73 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_74 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_75 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_76 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_36 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_76 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_36 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_36 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_77 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_37 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_77 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_37 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_37 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_78 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_38 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_78 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_38 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_38 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_79 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_39 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_79 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_39 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_39 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_4 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_9 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_4 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_36 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_37 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_38 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_39 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_4 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_4 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_4 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_80 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_81 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_82 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_83 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_80 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_81 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_82 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_83 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_84 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_40 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_84 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_40 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_40 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_85 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_41 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_85 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_41 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_41 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_86 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_42 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_86 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_42 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_42 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_87 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_43 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_87 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_43 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_43 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_10 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_40 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_41 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_42 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_43 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_88 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_89 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_90 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_91 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_88 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_89 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_90 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_91 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_92 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_44 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_92 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_44 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_44 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_93 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_45 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_93 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_45 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_45 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_94 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_46 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_94 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_46 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_46 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_95 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_47 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_95 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_47 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_47 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_5 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_11 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_5 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_44 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_45 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_46 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_47 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_5 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_5 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_5 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_96 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_97 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_98 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_99 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_96 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_97 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_98 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_99 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_100 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_48 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_100 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_48 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_48 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_101 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_49 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_101 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_49 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_49 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_102 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_50 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_102 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_50 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_50 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_103 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_51 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_103 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_51 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_51 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_12 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_48 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_49 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_50 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_51 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_104 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_105 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_106 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_107 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_104 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_105 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_106 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_107 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_108 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_52 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_108 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_52 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_52 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_109 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_53 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_109 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_53 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_53 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_110 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_54 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_110 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_54 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_54 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_111 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_55 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_111 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_55 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_55 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_6 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_13 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_6 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_52 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_53 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_54 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_55 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_6 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_6 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_6 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_112 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_113 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_114 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_115 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_112 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_113 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_114 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_115 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_116 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_56 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_116 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_56 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_56 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_117 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_57 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_117 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_57 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_57 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_118 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_58 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_118 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_58 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_58 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_119 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_59 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_119 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_59 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_59 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_14 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_56 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_57 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_58 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_59 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_120 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_121 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_122 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_123 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_120 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_121 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_122 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_123 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_124 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_60 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_124 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_60 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_60 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_125 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_61 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_125 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_61 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_61 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_126 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_62 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_126 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_62 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_62 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_127 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_63 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_127 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_63 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_63 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_7 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_15 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_7 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_60 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_61 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_62 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_63 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_7 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_7 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_7 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_128 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_129 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_130 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_131 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_16 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_128 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_129 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_130 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_131 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_132 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_64 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_132 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_64 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_64 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_133 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_65 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_133 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_65 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_65 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_134 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_66 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_134 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_66 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_66 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_135 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_67 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_135 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_67 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_67 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_16 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_64 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_65 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_66 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_67 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_136 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_137 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_138 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_139 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_17 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_136 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_137 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_138 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_139 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_140 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_68 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_140 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_68 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_68 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_141 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_69 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_141 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_69 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_69 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_142 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_70 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_142 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_70 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_70 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_143 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_71 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_143 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_71 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_71 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_8 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_17 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_8 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_68 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_69 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_70 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_71 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_8 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_8 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_8 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_144 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_145 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_146 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_147 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_18 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_144 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_145 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_146 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_147 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_148 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_72 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_148 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_72 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_72 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_149 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_73 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_149 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_73 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_73 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_150 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_74 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_150 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_74 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_74 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_151 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_75 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_151 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_75 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_75 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_18 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_72 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_73 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_74 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_75 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_152 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_153 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_154 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_155 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_19 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_152 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_153 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_154 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_155 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_156 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_76 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_156 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_76 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_76 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_157 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_77 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_157 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_77 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_77 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_158 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_78 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_158 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_78 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_78 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_159 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_79 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_159 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_79 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_79 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_9 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_19 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_9 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_76 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_77 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_78 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_79 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_9 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_9 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_9 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_160 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_161 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_162 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_163 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_20 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_160 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_161 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_162 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_163 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_164 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_80 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_164 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_80 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_80 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_165 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_81 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_165 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_81 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_81 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_166 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_82 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_166 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_82 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_82 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_167 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_83 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_167 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_83 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_83 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_20 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_80 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_81 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_82 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_83 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_168 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_169 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_170 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_171 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_21 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_168 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_169 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_170 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_171 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_172 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_84 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_172 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_84 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_84 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_173 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_85 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_173 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_85 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_85 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_174 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_86 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_174 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_86 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_86 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_175 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_87 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_175 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_87 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_87 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_10 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_21 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_10 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_84 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_85 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_86 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_87 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_10 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_10 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_10 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_176 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_177 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_178 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_179 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_22 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_176 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_177 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_178 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_179 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_180 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_88 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_180 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_88 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_88 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_181 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_89 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_181 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_89 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_89 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_182 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_90 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_182 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_90 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_90 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_183 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_91 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_183 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_91 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_91 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_22 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_88 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_89 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_90 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_91 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_184 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_185 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_186 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_187 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_23 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_184 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_185 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_186 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_187 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_188 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_92 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_188 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_92 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_92 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_189 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_93 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_189 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_93 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_93 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_190 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_94 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_190 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_94 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_94 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_191 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_95 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_191 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_95 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_95 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_11 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_23 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_11 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_92 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_93 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_94 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_95 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_11 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_11 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_11 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_192 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_193 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_194 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_195 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_24 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_192 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_193 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_194 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_195 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_196 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_96 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_196 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_96 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_96 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_197 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_97 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_197 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_97 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_97 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_198 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_98 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_198 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_98 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_98 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_199 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_99 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_199 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_99 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_99 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_24 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_96 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_97 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_98 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_99 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_200 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_201 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_202 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_203 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_25 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_200 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_201 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_202 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_203 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_204 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_100 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_204 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_100 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_100 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_205 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_101 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_205 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_101 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_101 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_206 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_102 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_206 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_102 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_102 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_207 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_103 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_207 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_103 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_103 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_12 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_25 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_12 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_100 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_101 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_102 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_103 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_12 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_12 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_12 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_208 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_209 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_210 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_211 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_26 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_208 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_209 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_210 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_211 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_212 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_104 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_212 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_104 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_104 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_213 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_105 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_213 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_105 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_105 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_214 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_106 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_214 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_106 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_106 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_215 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_107 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_215 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_107 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_107 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_26 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_104 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_105 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_106 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_107 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_216 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_217 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_218 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_219 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_27 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_216 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_217 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_218 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_219 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_220 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_108 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_220 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_108 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_108 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_221 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_109 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_221 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_109 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_109 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_222 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_110 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_222 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_110 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_110 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_223 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_111 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_223 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_111 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_111 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_13 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_27 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_13 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_108 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_109 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_110 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_111 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_13 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_13 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_13 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_224 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_225 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_226 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_227 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_28 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_224 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_225 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_226 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_227 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_228 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_112 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_228 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_112 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_112 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_229 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_113 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_229 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_113 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_113 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_230 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_114 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_230 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_114 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_114 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_231 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_115 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_231 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_115 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_115 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_28 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_112 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_113 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_114 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_115 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_232 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_233 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_234 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_235 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_29 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_232 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_233 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_234 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_235 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_236 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_116 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_236 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_116 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_116 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_237 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_117 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_237 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_117 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_117 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_238 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_118 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_238 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_118 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_118 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_239 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_119 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_239 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_119 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_119 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_14 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_29 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_14 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_116 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_117 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_118 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_119 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_14 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_14 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_14 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_240 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_241 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_242 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_243 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_30 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_240 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_241 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_242 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_243 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_244 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_120 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_244 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_120 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_120 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_245 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_121 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_245 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_121 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_121 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_246 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_122 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_246 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_122 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_122 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_247 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_123 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_247 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_123 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_123 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_30 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_120 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_121 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_122 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_123 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_248 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_249 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_250 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_251 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_31 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_248 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_249 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_250 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_251 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_252 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_124 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_252 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_124 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_124 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_253 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_125 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_253 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_125 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_125 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_254 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_126 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_254 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_126 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_126 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_255 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_127 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_255 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_127 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_127 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_15 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_31 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_15 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_124 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_125 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_126 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_127 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_15 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_15 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_15 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module TxMainband :
    input clock : Clock
    input reset : Reset
    output io : { flip rxMbAfe : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[16]}, txMbIo : { data : UInt<16>, valid : UInt<1>, track : UInt<1>, clkp : Clock, clkn : Clock}, flip clkp : Clock, flip clkn : Clock, flip track : UInt<1>} @[src/main/scala/mbafe/MbAfe.scala 13:16]

    inst txMbFifos_0 of AsyncQueue @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_1 of AsyncQueue_1 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_2 of AsyncQueue_2 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_3 of AsyncQueue_3 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_4 of AsyncQueue_4 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_5 of AsyncQueue_5 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_6 of AsyncQueue_6 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_7 of AsyncQueue_7 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_8 of AsyncQueue_8 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_9 of AsyncQueue_9 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_10 of AsyncQueue_10 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_11 of AsyncQueue_11 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_12 of AsyncQueue_12 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_13 of AsyncQueue_13 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_14 of AsyncQueue_14 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    inst txMbFifos_15 of AsyncQueue_15 @[src/main/scala/mbafe/MbAfe.scala 38:44]
    wire outValid : UInt<1> @[src/main/scala/mbafe/MbAfe.scala 47:28]
    wire outTrack : UInt<1> @[src/main/scala/mbafe/MbAfe.scala 48:28]
    reg txMbShiftRegs_0 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_1 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_2 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_3 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_4 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_5 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_6 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_7 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_8 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_9 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_10 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_11 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_12 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_13 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_14 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbShiftRegs_15 : UInt<16>, io.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 49:52]
    reg txMbUICounter : UInt<4>, io.clkp with :
      reset => (reset, UInt<4>("h0")) @[src/main/scala/mbafe/MbAfe.scala 50:36]
    reg txMbUICounter_next : UInt, io.clkp with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 52:41]
    txMbUICounter_next <= txMbUICounter @[src/main/scala/mbafe/MbAfe.scala 52:41]
    wire hasData : UInt<1> @[src/main/scala/mbafe/MbAfe.scala 53:27]
    reg clockGateCounter : UInt<4>, io.clkp with :
      reset => (reset, UInt<4>("h0")) @[src/main/scala/mbafe/MbAfe.scala 54:39]
    node _fifoValid_next_T = and(txMbFifos_0.io.deq.valid, txMbFifos_1.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    node _fifoValid_next_T_1 = and(_fifoValid_next_T, txMbFifos_2.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    node _fifoValid_next_T_2 = and(_fifoValid_next_T_1, txMbFifos_3.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    node _fifoValid_next_T_3 = and(_fifoValid_next_T_2, txMbFifos_4.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    node _fifoValid_next_T_4 = and(_fifoValid_next_T_3, txMbFifos_5.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    node _fifoValid_next_T_5 = and(_fifoValid_next_T_4, txMbFifos_6.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    node _fifoValid_next_T_6 = and(_fifoValid_next_T_5, txMbFifos_7.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    node _fifoValid_next_T_7 = and(_fifoValid_next_T_6, txMbFifos_8.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    node _fifoValid_next_T_8 = and(_fifoValid_next_T_7, txMbFifos_9.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    node _fifoValid_next_T_9 = and(_fifoValid_next_T_8, txMbFifos_10.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    node _fifoValid_next_T_10 = and(_fifoValid_next_T_9, txMbFifos_11.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    node _fifoValid_next_T_11 = and(_fifoValid_next_T_10, txMbFifos_12.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    node _fifoValid_next_T_12 = and(_fifoValid_next_T_11, txMbFifos_13.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    node _fifoValid_next_T_13 = and(_fifoValid_next_T_12, txMbFifos_14.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    node _fifoValid_next_T_14 = and(_fifoValid_next_T_13, txMbFifos_15.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 55:77]
    reg fifoValid_next : UInt<1>, io.clkp with :
      reset => (UInt<1>("h0"), fifoValid_next) @[src/main/scala/mbafe/MbAfe.scala 55:37]
    fifoValid_next <= _fifoValid_next_T_14 @[src/main/scala/mbafe/MbAfe.scala 55:37]
    reg shift : UInt<1>, io.clkp with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 58:28]
    reg outValid_next : UInt<1>, io.clkp with :
      reset => (UInt<1>("h0"), outValid_next) @[src/main/scala/mbafe/MbAfe.scala 59:36]
    outValid_next <= outValid @[src/main/scala/mbafe/MbAfe.scala 59:36]
    node _hasData_T = and(txMbFifos_0.io.deq.valid, txMbFifos_1.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_1 = and(_hasData_T, txMbFifos_2.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_2 = and(_hasData_T_1, txMbFifos_3.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_3 = and(_hasData_T_2, txMbFifos_4.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_4 = and(_hasData_T_3, txMbFifos_5.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_5 = and(_hasData_T_4, txMbFifos_6.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_6 = and(_hasData_T_5, txMbFifos_7.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_7 = and(_hasData_T_6, txMbFifos_8.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_8 = and(_hasData_T_7, txMbFifos_9.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_9 = and(_hasData_T_8, txMbFifos_10.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_10 = and(_hasData_T_9, txMbFifos_11.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_11 = and(_hasData_T_10, txMbFifos_12.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_12 = and(_hasData_T_11, txMbFifos_13.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_13 = and(_hasData_T_12, txMbFifos_14.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_14 = and(_hasData_T_13, txMbFifos_15.io.deq.valid) @[src/main/scala/mbafe/MbAfe.scala 60:61]
    node _hasData_T_15 = xor(_hasData_T_14, fifoValid_next) @[src/main/scala/mbafe/MbAfe.scala 60:67]
    node _hasData_T_16 = not(_hasData_T_15) @[src/main/scala/mbafe/MbAfe.scala 60:20]
    node _hasData_T_17 = and(_hasData_T_16, fifoValid_next) @[src/main/scala/mbafe/MbAfe.scala 60:86]
    hasData <= _hasData_T_17 @[src/main/scala/mbafe/MbAfe.scala 60:17]
    when outValid : @[src/main/scala/mbafe/MbAfe.scala 61:23]
      clockGateCounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 62:30]
    else :
      node _T = not(outValid) @[src/main/scala/mbafe/MbAfe.scala 63:20]
      node _T_1 = lt(clockGateCounter, UInt<5>("h10")) @[src/main/scala/mbafe/MbAfe.scala 63:50]
      node _T_2 = and(_T, _T_1) @[src/main/scala/mbafe/MbAfe.scala 63:30]
      when _T_2 : @[src/main/scala/mbafe/MbAfe.scala 63:61]
        node _clockGateCounter_T = add(clockGateCounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 64:50]
        node _clockGateCounter_T_1 = tail(_clockGateCounter_T, 1) @[src/main/scala/mbafe/MbAfe.scala 64:50]
        clockGateCounter <= _clockGateCounter_T_1 @[src/main/scala/mbafe/MbAfe.scala 64:30]
    node _io_txMbIo_clkn_T = geq(clockGateCounter, UInt<5>("h10")) @[src/main/scala/mbafe/MbAfe.scala 67:49]
    node _io_txMbIo_clkn_T_1 = not(outValid) @[src/main/scala/mbafe/MbAfe.scala 67:63]
    node _io_txMbIo_clkn_T_2 = and(_io_txMbIo_clkn_T, _io_txMbIo_clkn_T_1) @[src/main/scala/mbafe/MbAfe.scala 67:60]
    node _io_txMbIo_clkn_T_3 = asUInt(io.clkn) @[src/main/scala/mbafe/MbAfe.scala 67:92]
    node _io_txMbIo_clkn_T_4 = bits(_io_txMbIo_clkn_T_3, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 67:92]
    node _io_txMbIo_clkn_T_5 = mux(_io_txMbIo_clkn_T_2, UInt<1>("h0"), _io_txMbIo_clkn_T_4) @[src/main/scala/mbafe/MbAfe.scala 67:30]
    node _io_txMbIo_clkn_T_6 = asClock(_io_txMbIo_clkn_T_5) @[src/main/scala/mbafe/MbAfe.scala 67:100]
    io.txMbIo.clkn <= _io_txMbIo_clkn_T_6 @[src/main/scala/mbafe/MbAfe.scala 67:24]
    node _io_txMbIo_clkp_T = geq(clockGateCounter, UInt<5>("h10")) @[src/main/scala/mbafe/MbAfe.scala 68:49]
    node _io_txMbIo_clkp_T_1 = not(outValid) @[src/main/scala/mbafe/MbAfe.scala 68:63]
    node _io_txMbIo_clkp_T_2 = and(_io_txMbIo_clkp_T, _io_txMbIo_clkp_T_1) @[src/main/scala/mbafe/MbAfe.scala 68:60]
    node _io_txMbIo_clkp_T_3 = asUInt(io.clkp) @[src/main/scala/mbafe/MbAfe.scala 68:92]
    node _io_txMbIo_clkp_T_4 = bits(_io_txMbIo_clkp_T_3, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 68:92]
    node _io_txMbIo_clkp_T_5 = mux(_io_txMbIo_clkp_T_2, UInt<1>("h0"), _io_txMbIo_clkp_T_4) @[src/main/scala/mbafe/MbAfe.scala 68:30]
    node _io_txMbIo_clkp_T_6 = asClock(_io_txMbIo_clkp_T_5) @[src/main/scala/mbafe/MbAfe.scala 68:100]
    io.txMbIo.clkp <= _io_txMbIo_clkp_T_6 @[src/main/scala/mbafe/MbAfe.scala 68:24]
    txMbFifos_0.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_0.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_0.io.enq.bits <= io.rxMbAfe.bits[0] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_0.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_0.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_0.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_0.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_3 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_4 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_5 = leq(_T_4, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_6 = and(_T_3, _T_5) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_6 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_7 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_7 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_0.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_0 <= txMbFifos_0.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_0_T = dshl(txMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_0 <= _txMbShiftRegs_0_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_1 = tail(_txMbUICounter_T, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_1 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_8 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_9 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_10 = and(_T_8, _T_9) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_10 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_2 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_3 = tail(_txMbUICounter_T_2, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_3 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_11 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_11 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_0.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_0 <= txMbFifos_0.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_0_T_1 = dshl(txMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_0 <= _txMbShiftRegs_0_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_1.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_1.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_1.io.enq.bits <= io.rxMbAfe.bits[1] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_1.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_1.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_1.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_1.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_12 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_13 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_14 = leq(_T_13, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_15 = and(_T_12, _T_14) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_15 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_16 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_16 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_1.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_1 <= txMbFifos_1.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_1_T = dshl(txMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_1 <= _txMbShiftRegs_1_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_4 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_5 = tail(_txMbUICounter_T_4, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_5 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_17 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_18 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_19 = and(_T_17, _T_18) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_19 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_6 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_7 = tail(_txMbUICounter_T_6, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_7 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_20 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_20 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_1.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_1 <= txMbFifos_1.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_1_T_1 = dshl(txMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_1 <= _txMbShiftRegs_1_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_2.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_2.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_2.io.enq.bits <= io.rxMbAfe.bits[2] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_2.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_2.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_2.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_2.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_21 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_22 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_23 = leq(_T_22, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_24 = and(_T_21, _T_23) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_24 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_25 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_25 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_2.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_2 <= txMbFifos_2.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_2_T = dshl(txMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_2 <= _txMbShiftRegs_2_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_8 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_9 = tail(_txMbUICounter_T_8, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_9 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_26 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_27 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_28 = and(_T_26, _T_27) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_28 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_10 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_11 = tail(_txMbUICounter_T_10, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_11 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_29 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_29 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_2.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_2 <= txMbFifos_2.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_2_T_1 = dshl(txMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_2 <= _txMbShiftRegs_2_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_3.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_3.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_3.io.enq.bits <= io.rxMbAfe.bits[3] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_3.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_3.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_3.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_3.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_30 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_31 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_32 = leq(_T_31, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_33 = and(_T_30, _T_32) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_33 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_34 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_34 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_3.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_3 <= txMbFifos_3.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_3_T = dshl(txMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_3 <= _txMbShiftRegs_3_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_12 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_13 = tail(_txMbUICounter_T_12, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_13 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_35 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_36 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_37 = and(_T_35, _T_36) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_37 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_14 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_15 = tail(_txMbUICounter_T_14, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_15 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_38 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_38 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_3.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_3 <= txMbFifos_3.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_3_T_1 = dshl(txMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_3 <= _txMbShiftRegs_3_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_4.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_4.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_4.io.enq.bits <= io.rxMbAfe.bits[4] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_4.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_4.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_4.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_4.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_39 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_40 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_41 = leq(_T_40, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_42 = and(_T_39, _T_41) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_42 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_43 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_43 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_4.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_4 <= txMbFifos_4.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_4_T = dshl(txMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_4 <= _txMbShiftRegs_4_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_16 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_17 = tail(_txMbUICounter_T_16, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_17 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_44 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_45 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_46 = and(_T_44, _T_45) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_46 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_18 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_19 = tail(_txMbUICounter_T_18, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_19 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_47 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_47 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_4.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_4 <= txMbFifos_4.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_4_T_1 = dshl(txMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_4 <= _txMbShiftRegs_4_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_5.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_5.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_5.io.enq.bits <= io.rxMbAfe.bits[5] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_5.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_5.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_5.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_5.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_48 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_49 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_50 = leq(_T_49, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_51 = and(_T_48, _T_50) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_51 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_52 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_52 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_5.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_5 <= txMbFifos_5.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_5_T = dshl(txMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_5 <= _txMbShiftRegs_5_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_20 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_21 = tail(_txMbUICounter_T_20, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_21 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_53 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_54 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_55 = and(_T_53, _T_54) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_55 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_22 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_23 = tail(_txMbUICounter_T_22, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_23 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_56 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_56 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_5.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_5 <= txMbFifos_5.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_5_T_1 = dshl(txMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_5 <= _txMbShiftRegs_5_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_6.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_6.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_6.io.enq.bits <= io.rxMbAfe.bits[6] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_6.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_6.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_6.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_6.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_57 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_58 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_59 = leq(_T_58, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_60 = and(_T_57, _T_59) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_60 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_61 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_61 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_6.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_6 <= txMbFifos_6.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_6_T = dshl(txMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_6 <= _txMbShiftRegs_6_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_24 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_25 = tail(_txMbUICounter_T_24, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_25 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_62 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_63 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_64 = and(_T_62, _T_63) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_64 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_26 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_27 = tail(_txMbUICounter_T_26, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_27 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_65 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_65 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_6.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_6 <= txMbFifos_6.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_6_T_1 = dshl(txMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_6 <= _txMbShiftRegs_6_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_7.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_7.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_7.io.enq.bits <= io.rxMbAfe.bits[7] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_7.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_7.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_7.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_7.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_66 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_67 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_68 = leq(_T_67, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_69 = and(_T_66, _T_68) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_69 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_70 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_70 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_7.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_7 <= txMbFifos_7.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_7_T = dshl(txMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_7 <= _txMbShiftRegs_7_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_28 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_29 = tail(_txMbUICounter_T_28, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_29 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_71 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_72 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_73 = and(_T_71, _T_72) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_73 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_30 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_31 = tail(_txMbUICounter_T_30, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_31 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_74 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_74 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_7.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_7 <= txMbFifos_7.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_7_T_1 = dshl(txMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_7 <= _txMbShiftRegs_7_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_8.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_8.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_8.io.enq.bits <= io.rxMbAfe.bits[8] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_8.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_8.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_8.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_8.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_75 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_76 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_77 = leq(_T_76, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_78 = and(_T_75, _T_77) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_78 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_79 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_79 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_8.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_8 <= txMbFifos_8.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_8_T = dshl(txMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_8 <= _txMbShiftRegs_8_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_32 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_33 = tail(_txMbUICounter_T_32, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_33 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_80 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_81 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_82 = and(_T_80, _T_81) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_82 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_34 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_35 = tail(_txMbUICounter_T_34, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_35 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_83 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_83 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_8.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_8 <= txMbFifos_8.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_8_T_1 = dshl(txMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_8 <= _txMbShiftRegs_8_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_9.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_9.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_9.io.enq.bits <= io.rxMbAfe.bits[9] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_9.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_9.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_9.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_9.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_84 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_85 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_86 = leq(_T_85, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_87 = and(_T_84, _T_86) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_87 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_88 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_88 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_9.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_9 <= txMbFifos_9.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_9_T = dshl(txMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_9 <= _txMbShiftRegs_9_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_36 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_37 = tail(_txMbUICounter_T_36, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_37 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_89 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_90 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_91 = and(_T_89, _T_90) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_91 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_38 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_39 = tail(_txMbUICounter_T_38, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_39 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_92 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_92 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_9.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_9 <= txMbFifos_9.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_9_T_1 = dshl(txMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_9 <= _txMbShiftRegs_9_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_10.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_10.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_10.io.enq.bits <= io.rxMbAfe.bits[10] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_10.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_10.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_10.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_10.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_93 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_94 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_95 = leq(_T_94, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_96 = and(_T_93, _T_95) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_96 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_97 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_97 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_10.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_10 <= txMbFifos_10.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_10_T = dshl(txMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_10 <= _txMbShiftRegs_10_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_40 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_41 = tail(_txMbUICounter_T_40, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_41 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_98 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_99 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_100 = and(_T_98, _T_99) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_100 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_42 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_43 = tail(_txMbUICounter_T_42, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_43 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_101 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_101 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_10.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_10 <= txMbFifos_10.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_10_T_1 = dshl(txMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_10 <= _txMbShiftRegs_10_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_11.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_11.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_11.io.enq.bits <= io.rxMbAfe.bits[11] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_11.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_11.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_11.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_11.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_102 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_103 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_104 = leq(_T_103, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_105 = and(_T_102, _T_104) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_105 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_106 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_106 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_11.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_11 <= txMbFifos_11.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_11_T = dshl(txMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_11 <= _txMbShiftRegs_11_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_44 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_45 = tail(_txMbUICounter_T_44, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_45 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_107 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_108 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_109 = and(_T_107, _T_108) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_109 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_46 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_47 = tail(_txMbUICounter_T_46, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_47 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_110 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_110 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_11.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_11 <= txMbFifos_11.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_11_T_1 = dshl(txMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_11 <= _txMbShiftRegs_11_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_12.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_12.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_12.io.enq.bits <= io.rxMbAfe.bits[12] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_12.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_12.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_12.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_12.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_111 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_112 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_113 = leq(_T_112, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_114 = and(_T_111, _T_113) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_114 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_115 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_115 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_12.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_12 <= txMbFifos_12.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_12_T = dshl(txMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_12 <= _txMbShiftRegs_12_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_48 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_49 = tail(_txMbUICounter_T_48, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_49 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_116 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_117 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_118 = and(_T_116, _T_117) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_118 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_50 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_51 = tail(_txMbUICounter_T_50, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_51 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_119 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_119 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_12.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_12 <= txMbFifos_12.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_12_T_1 = dshl(txMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_12 <= _txMbShiftRegs_12_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_13.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_13.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_13.io.enq.bits <= io.rxMbAfe.bits[13] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_13.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_13.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_13.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_13.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_120 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_121 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_122 = leq(_T_121, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_123 = and(_T_120, _T_122) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_123 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_124 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_124 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_13.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_13 <= txMbFifos_13.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_13_T = dshl(txMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_13 <= _txMbShiftRegs_13_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_52 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_53 = tail(_txMbUICounter_T_52, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_53 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_125 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_126 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_127 = and(_T_125, _T_126) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_127 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_54 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_55 = tail(_txMbUICounter_T_54, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_55 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_128 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_128 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_13.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_13 <= txMbFifos_13.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_13_T_1 = dshl(txMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_13 <= _txMbShiftRegs_13_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_14.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_14.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_14.io.enq.bits <= io.rxMbAfe.bits[14] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_14.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_14.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_14.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_14.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_129 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_130 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_131 = leq(_T_130, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_132 = and(_T_129, _T_131) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_132 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_133 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_133 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_14.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_14 <= txMbFifos_14.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_14_T = dshl(txMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_14 <= _txMbShiftRegs_14_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_56 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_57 = tail(_txMbUICounter_T_56, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_57 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_134 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_135 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_136 = and(_T_134, _T_135) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_136 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_58 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_59 = tail(_txMbUICounter_T_58, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_59 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_137 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_137 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_14.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_14 <= txMbFifos_14.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_14_T_1 = dshl(txMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_14 <= _txMbShiftRegs_14_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    txMbFifos_15.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 73:35]
    txMbFifos_15.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 74:35]
    txMbFifos_15.io.enq.bits <= io.rxMbAfe.bits[15] @[src/main/scala/mbafe/MbAfe.scala 75:35]
    txMbFifos_15.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 76:35]
    txMbFifos_15.io.deq_clock <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 79:35]
    txMbFifos_15.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 80:35]
    txMbFifos_15.io.deq.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 81:35]
    outTrack <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 84:22]
    node _T_138 = neq(txMbUICounter_next, txMbUICounter) @[src/main/scala/mbafe/MbAfe.scala 85:38]
    node _T_139 = rem(txMbUICounter_next, UInt<4>("h8")) @[src/main/scala/mbafe/MbAfe.scala 85:79]
    node _T_140 = leq(_T_139, UInt<2>("h3")) @[src/main/scala/mbafe/MbAfe.scala 85:89]
    node _T_141 = and(_T_138, _T_140) @[src/main/scala/mbafe/MbAfe.scala 85:56]
    when _T_141 : @[src/main/scala/mbafe/MbAfe.scala 85:105]
      outValid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 86:26]
    else :
      outValid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 88:26]
    when hasData : @[src/main/scala/mbafe/MbAfe.scala 90:26]
      node _T_142 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 91:36]
      when _T_142 : @[src/main/scala/mbafe/MbAfe.scala 91:45]
        txMbFifos_15.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 92:43]
        txMbShiftRegs_15 <= txMbFifos_15.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 93:38]
      else :
        node _txMbShiftRegs_15_T = dshl(txMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 95:58]
        txMbShiftRegs_15 <= _txMbShiftRegs_15_T @[src/main/scala/mbafe/MbAfe.scala 95:38]
      node _txMbUICounter_T_60 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      node _txMbUICounter_T_61 = tail(_txMbUICounter_T_60, 1) @[src/main/scala/mbafe/MbAfe.scala 97:48]
      txMbUICounter <= _txMbUICounter_T_61 @[src/main/scala/mbafe/MbAfe.scala 97:31]
    node _T_143 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 99:32]
    node _T_144 = not(hasData) @[src/main/scala/mbafe/MbAfe.scala 99:43]
    node _T_145 = and(_T_143, _T_144) @[src/main/scala/mbafe/MbAfe.scala 99:40]
    when _T_145 : @[src/main/scala/mbafe/MbAfe.scala 99:52]
      txMbUICounter <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 100:31]
      shift <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 101:23]
    else :
      node _txMbUICounter_T_62 = add(txMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      node _txMbUICounter_T_63 = tail(_txMbUICounter_T_62, 1) @[src/main/scala/mbafe/MbAfe.scala 103:48]
      txMbUICounter <= _txMbUICounter_T_63 @[src/main/scala/mbafe/MbAfe.scala 103:31]
      shift <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 104:23]
    when shift : @[src/main/scala/mbafe/MbAfe.scala 106:24]
      node _T_146 = eq(txMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 107:36]
      when _T_146 : @[src/main/scala/mbafe/MbAfe.scala 107:45]
        txMbFifos_15.io.deq.ready <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 108:43]
        txMbShiftRegs_15 <= txMbFifos_15.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 109:38]
      else :
        node _txMbShiftRegs_15_T_1 = dshl(txMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 111:58]
        txMbShiftRegs_15 <= _txMbShiftRegs_15_T_1 @[src/main/scala/mbafe/MbAfe.scala 111:38]
    node _io_txMbIo_data_T = head(txMbShiftRegs_0, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_1 = head(txMbShiftRegs_1, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_2 = head(txMbShiftRegs_2, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_3 = head(txMbShiftRegs_3, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_4 = head(txMbShiftRegs_4, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_5 = head(txMbShiftRegs_5, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_6 = head(txMbShiftRegs_6, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_7 = head(txMbShiftRegs_7, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_8 = head(txMbShiftRegs_8, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_9 = head(txMbShiftRegs_9, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_10 = head(txMbShiftRegs_10, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_11 = head(txMbShiftRegs_11, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_12 = head(txMbShiftRegs_12, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_13 = head(txMbShiftRegs_13, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_14 = head(txMbShiftRegs_14, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    node _io_txMbIo_data_T_15 = head(txMbShiftRegs_15, 1) @[src/main/scala/mbafe/MbAfe.scala 115:59]
    wire _io_txMbIo_data_WIRE : UInt<1>[16] @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[0] <= _io_txMbIo_data_T @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[1] <= _io_txMbIo_data_T_1 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[2] <= _io_txMbIo_data_T_2 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[3] <= _io_txMbIo_data_T_3 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[4] <= _io_txMbIo_data_T_4 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[5] <= _io_txMbIo_data_T_5 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[6] <= _io_txMbIo_data_T_6 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[7] <= _io_txMbIo_data_T_7 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[8] <= _io_txMbIo_data_T_8 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[9] <= _io_txMbIo_data_T_9 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[10] <= _io_txMbIo_data_T_10 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[11] <= _io_txMbIo_data_T_11 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[12] <= _io_txMbIo_data_T_12 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[13] <= _io_txMbIo_data_T_13 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[14] <= _io_txMbIo_data_T_14 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    _io_txMbIo_data_WIRE[15] <= _io_txMbIo_data_T_15 @[src/main/scala/mbafe/MbAfe.scala 115:34]
    node io_txMbIo_data_lo_lo_lo = cat(_io_txMbIo_data_WIRE[1], _io_txMbIo_data_WIRE[0]) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    node io_txMbIo_data_lo_lo_hi = cat(_io_txMbIo_data_WIRE[3], _io_txMbIo_data_WIRE[2]) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    node io_txMbIo_data_lo_lo = cat(io_txMbIo_data_lo_lo_hi, io_txMbIo_data_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    node io_txMbIo_data_lo_hi_lo = cat(_io_txMbIo_data_WIRE[5], _io_txMbIo_data_WIRE[4]) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    node io_txMbIo_data_lo_hi_hi = cat(_io_txMbIo_data_WIRE[7], _io_txMbIo_data_WIRE[6]) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    node io_txMbIo_data_lo_hi = cat(io_txMbIo_data_lo_hi_hi, io_txMbIo_data_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    node io_txMbIo_data_lo = cat(io_txMbIo_data_lo_hi, io_txMbIo_data_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    node io_txMbIo_data_hi_lo_lo = cat(_io_txMbIo_data_WIRE[9], _io_txMbIo_data_WIRE[8]) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    node io_txMbIo_data_hi_lo_hi = cat(_io_txMbIo_data_WIRE[11], _io_txMbIo_data_WIRE[10]) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    node io_txMbIo_data_hi_lo = cat(io_txMbIo_data_hi_lo_hi, io_txMbIo_data_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    node io_txMbIo_data_hi_hi_lo = cat(_io_txMbIo_data_WIRE[13], _io_txMbIo_data_WIRE[12]) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    node io_txMbIo_data_hi_hi_hi = cat(_io_txMbIo_data_WIRE[15], _io_txMbIo_data_WIRE[14]) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    node io_txMbIo_data_hi_hi = cat(io_txMbIo_data_hi_hi_hi, io_txMbIo_data_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    node io_txMbIo_data_hi = cat(io_txMbIo_data_hi_hi, io_txMbIo_data_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    node _io_txMbIo_data_T_16 = cat(io_txMbIo_data_hi, io_txMbIo_data_lo) @[src/main/scala/mbafe/MbAfe.scala 115:65]
    io.txMbIo.data <= _io_txMbIo_data_T_16 @[src/main/scala/mbafe/MbAfe.scala 115:24]
    node _io_rxMbAfe_ready_T = and(txMbFifos_0.io.enq.ready, txMbFifos_1.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    node _io_rxMbAfe_ready_T_1 = and(_io_rxMbAfe_ready_T, txMbFifos_2.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    node _io_rxMbAfe_ready_T_2 = and(_io_rxMbAfe_ready_T_1, txMbFifos_3.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    node _io_rxMbAfe_ready_T_3 = and(_io_rxMbAfe_ready_T_2, txMbFifos_4.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    node _io_rxMbAfe_ready_T_4 = and(_io_rxMbAfe_ready_T_3, txMbFifos_5.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    node _io_rxMbAfe_ready_T_5 = and(_io_rxMbAfe_ready_T_4, txMbFifos_6.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    node _io_rxMbAfe_ready_T_6 = and(_io_rxMbAfe_ready_T_5, txMbFifos_7.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    node _io_rxMbAfe_ready_T_7 = and(_io_rxMbAfe_ready_T_6, txMbFifos_8.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    node _io_rxMbAfe_ready_T_8 = and(_io_rxMbAfe_ready_T_7, txMbFifos_9.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    node _io_rxMbAfe_ready_T_9 = and(_io_rxMbAfe_ready_T_8, txMbFifos_10.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    node _io_rxMbAfe_ready_T_10 = and(_io_rxMbAfe_ready_T_9, txMbFifos_11.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    node _io_rxMbAfe_ready_T_11 = and(_io_rxMbAfe_ready_T_10, txMbFifos_12.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    node _io_rxMbAfe_ready_T_12 = and(_io_rxMbAfe_ready_T_11, txMbFifos_13.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    node _io_rxMbAfe_ready_T_13 = and(_io_rxMbAfe_ready_T_12, txMbFifos_14.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    node _io_rxMbAfe_ready_T_14 = and(_io_rxMbAfe_ready_T_13, txMbFifos_15.io.enq.ready) @[src/main/scala/mbafe/MbAfe.scala 116:69]
    io.rxMbAfe.ready <= _io_rxMbAfe_ready_T_14 @[src/main/scala/mbafe/MbAfe.scala 116:27]
    io.txMbIo.track <= outTrack @[src/main/scala/mbafe/MbAfe.scala 118:25]
    io.txMbIo.valid <= outValid @[src/main/scala/mbafe/MbAfe.scala 119:25]
    txMbFifos_0.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_0.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_0.io.enq.bits <= io.rxMbAfe.bits[0] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_0.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_1.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_1.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_1.io.enq.bits <= io.rxMbAfe.bits[1] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_1.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_2.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_2.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_2.io.enq.bits <= io.rxMbAfe.bits[2] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_2.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_3.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_3.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_3.io.enq.bits <= io.rxMbAfe.bits[3] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_3.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_4.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_4.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_4.io.enq.bits <= io.rxMbAfe.bits[4] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_4.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_5.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_5.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_5.io.enq.bits <= io.rxMbAfe.bits[5] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_5.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_6.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_6.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_6.io.enq.bits <= io.rxMbAfe.bits[6] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_6.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_7.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_7.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_7.io.enq.bits <= io.rxMbAfe.bits[7] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_7.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_8.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_8.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_8.io.enq.bits <= io.rxMbAfe.bits[8] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_8.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_9.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_9.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_9.io.enq.bits <= io.rxMbAfe.bits[9] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_9.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_10.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_10.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_10.io.enq.bits <= io.rxMbAfe.bits[10] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_10.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_11.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_11.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_11.io.enq.bits <= io.rxMbAfe.bits[11] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_11.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_12.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_12.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_12.io.enq.bits <= io.rxMbAfe.bits[12] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_12.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_13.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_13.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_13.io.enq.bits <= io.rxMbAfe.bits[13] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_13.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_14.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_14.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_14.io.enq.bits <= io.rxMbAfe.bits[14] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_14.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]
    txMbFifos_15.io.enq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 126:35]
    txMbFifos_15.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 127:35]
    txMbFifos_15.io.enq.bits <= io.rxMbAfe.bits[15] @[src/main/scala/mbafe/MbAfe.scala 128:35]
    txMbFifos_15.io.enq.valid <= io.rxMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 129:35]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_256 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_257 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_258 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_259 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_32 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_256 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_257 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_258 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_259 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_260 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_128 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_260 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_128 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_128 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_261 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_129 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_261 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_129 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_129 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_262 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_130 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_262 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_130 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_130 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_263 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_131 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_263 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_131 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_131 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_16 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_32 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_128 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_129 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_130 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_131 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_264 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_265 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_266 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_267 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_33 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_264 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_265 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_266 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_267 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_16 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_268 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_132 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_268 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_132 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_132 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_269 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_133 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_269 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_133 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_133 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_270 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_134 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_270 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_134 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_134 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_271 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_135 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_271 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_135 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_135 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_16 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_33 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_16 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_132 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_133 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_134 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_135 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_16 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_16 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_16 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_272 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_273 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_274 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_275 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_34 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_272 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_273 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_274 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_275 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_276 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_136 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_276 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_136 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_136 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_277 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_137 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_277 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_137 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_137 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_278 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_138 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_278 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_138 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_138 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_279 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_139 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_279 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_139 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_139 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_17 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_34 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_136 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_137 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_138 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_139 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_280 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_281 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_282 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_283 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_35 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_280 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_281 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_282 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_283 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_17 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_284 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_140 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_284 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_140 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_140 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_285 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_141 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_285 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_141 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_141 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_286 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_142 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_286 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_142 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_142 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_287 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_143 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_287 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_143 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_143 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_17 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_35 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_17 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_140 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_141 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_142 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_143 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_17 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_17 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_17 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_288 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_289 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_290 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_291 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_36 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_288 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_289 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_290 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_291 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_292 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_144 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_292 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_144 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_144 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_293 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_145 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_293 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_145 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_145 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_294 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_146 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_294 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_146 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_146 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_295 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_147 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_295 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_147 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_147 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_18 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_36 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_144 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_145 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_146 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_147 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_296 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_297 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_298 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_299 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_37 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_296 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_297 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_298 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_299 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_18 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_300 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_148 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_300 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_148 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_148 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_301 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_149 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_301 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_149 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_149 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_302 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_150 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_302 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_150 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_150 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_303 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_151 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_303 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_151 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_151 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_18 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_37 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_18 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_148 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_149 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_150 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_151 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_18 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_18 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_18 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_304 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_305 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_306 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_307 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_38 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_304 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_305 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_306 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_307 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_308 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_152 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_308 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_152 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_152 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_309 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_153 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_309 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_153 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_153 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_310 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_154 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_310 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_154 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_154 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_311 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_155 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_311 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_155 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_155 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_19 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_38 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_152 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_153 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_154 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_155 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_312 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_313 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_314 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_315 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_39 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_312 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_313 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_314 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_315 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_19 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_316 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_156 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_316 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_156 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_156 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_317 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_157 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_317 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_157 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_157 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_318 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_158 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_318 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_158 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_158 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_319 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_159 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_319 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_159 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_159 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_19 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_39 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_19 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_156 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_157 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_158 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_159 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_19 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_19 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_19 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_320 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_321 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_322 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_323 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_40 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_320 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_321 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_322 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_323 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_324 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_160 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_324 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_160 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_160 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_325 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_161 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_325 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_161 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_161 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_326 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_162 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_326 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_162 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_162 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_327 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_163 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_327 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_163 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_163 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_20 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_40 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_160 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_161 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_162 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_163 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_328 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_329 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_330 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_331 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_41 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_328 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_329 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_330 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_331 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_20 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_332 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_164 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_332 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_164 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_164 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_333 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_165 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_333 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_165 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_165 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_334 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_166 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_334 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_166 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_166 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_335 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_167 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_335 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_167 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_167 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_20 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_41 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_20 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_164 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_165 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_166 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_167 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_20 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_20 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_20 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_336 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_337 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_338 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_339 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_42 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_336 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_337 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_338 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_339 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_340 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_168 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_340 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_168 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_168 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_341 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_169 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_341 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_169 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_169 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_342 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_170 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_342 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_170 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_170 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_343 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_171 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_343 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_171 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_171 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_21 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_42 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_168 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_169 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_170 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_171 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_344 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_345 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_346 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_347 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_43 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_344 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_345 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_346 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_347 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_21 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_348 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_172 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_348 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_172 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_172 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_349 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_173 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_349 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_173 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_173 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_350 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_174 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_350 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_174 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_174 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_351 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_175 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_351 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_175 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_175 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_21 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_43 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_21 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_172 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_173 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_174 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_175 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_21 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_21 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_21 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_352 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_353 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_354 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_355 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_44 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_352 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_353 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_354 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_355 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_356 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_176 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_356 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_176 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_176 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_357 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_177 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_357 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_177 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_177 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_358 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_178 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_358 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_178 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_178 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_359 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_179 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_359 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_179 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_179 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_22 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_44 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_176 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_177 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_178 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_179 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_360 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_361 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_362 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_363 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_45 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_360 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_361 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_362 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_363 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_22 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_364 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_180 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_364 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_180 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_180 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_365 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_181 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_365 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_181 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_181 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_366 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_182 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_366 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_182 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_182 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_367 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_183 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_367 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_183 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_183 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_22 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_45 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_22 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_180 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_181 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_182 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_183 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_22 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_22 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_22 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_368 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_369 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_370 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_371 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_46 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_368 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_369 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_370 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_371 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_372 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_184 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_372 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_184 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_184 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_373 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_185 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_373 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_185 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_185 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_374 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_186 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_374 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_186 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_186 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_375 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_187 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_375 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_187 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_187 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_23 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_46 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_184 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_185 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_186 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_187 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_376 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_377 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_378 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_379 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_47 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_376 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_377 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_378 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_379 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_23 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_380 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_188 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_380 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_188 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_188 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_381 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_189 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_381 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_189 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_189 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_382 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_190 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_382 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_190 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_190 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_383 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_191 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_383 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_191 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_191 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_23 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_47 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_23 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_188 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_189 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_190 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_191 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_23 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_23 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_23 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_384 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_385 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_386 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_387 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_48 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_384 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_385 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_386 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_387 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_388 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_192 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_388 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_192 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_192 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_389 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_193 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_389 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_193 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_193 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_390 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_194 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_390 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_194 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_194 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_391 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_195 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_391 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_195 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_195 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_24 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_48 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_192 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_193 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_194 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_195 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_392 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_393 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_394 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_395 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_49 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_392 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_393 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_394 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_395 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_24 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_396 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_196 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_396 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_196 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_196 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_397 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_197 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_397 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_197 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_197 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_398 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_198 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_398 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_198 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_198 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_399 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_199 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_399 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_199 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_199 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_24 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_49 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_24 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_196 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_197 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_198 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_199 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_24 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_24 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_24 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_400 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_401 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_402 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_403 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_50 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_400 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_401 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_402 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_403 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_404 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_200 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_404 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_200 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_200 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_405 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_201 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_405 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_201 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_201 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_406 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_202 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_406 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_202 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_202 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_407 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_203 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_407 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_203 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_203 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_25 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_50 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_200 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_201 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_202 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_203 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_408 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_409 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_410 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_411 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_51 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_408 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_409 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_410 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_411 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_25 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_412 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_204 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_412 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_204 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_204 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_413 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_205 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_413 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_205 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_205 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_414 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_206 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_414 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_206 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_206 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_415 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_207 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_415 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_207 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_207 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_25 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_51 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_25 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_204 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_205 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_206 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_207 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_25 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_25 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_25 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_416 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_417 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_418 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_419 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_52 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_416 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_417 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_418 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_419 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_420 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_208 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_420 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_208 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_208 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_421 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_209 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_421 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_209 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_209 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_422 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_210 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_422 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_210 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_210 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_423 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_211 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_423 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_211 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_211 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_26 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_52 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_208 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_209 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_210 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_211 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_424 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_425 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_426 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_427 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_53 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_424 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_425 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_426 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_427 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_26 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_428 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_212 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_428 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_212 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_212 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_429 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_213 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_429 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_213 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_213 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_430 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_214 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_430 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_214 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_214 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_431 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_215 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_431 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_215 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_215 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_26 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_53 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_26 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_212 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_213 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_214 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_215 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_26 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_26 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_26 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_432 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_433 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_434 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_435 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_54 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_432 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_433 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_434 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_435 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_436 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_216 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_436 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_216 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_216 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_437 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_217 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_437 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_217 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_217 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_438 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_218 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_438 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_218 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_218 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_439 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_219 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_439 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_219 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_219 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_27 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_54 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_216 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_217 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_218 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_219 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_440 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_441 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_442 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_443 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_55 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_440 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_441 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_442 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_443 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_27 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_444 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_220 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_444 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_220 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_220 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_445 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_221 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_445 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_221 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_221 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_446 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_222 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_446 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_222 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_222 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_447 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_223 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_447 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_223 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_223 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_27 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_55 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_27 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_220 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_221 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_222 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_223 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_27 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_27 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_27 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_448 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_449 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_450 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_451 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_56 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_448 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_449 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_450 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_451 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_452 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_224 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_452 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_224 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_224 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_453 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_225 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_453 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_225 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_225 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_454 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_226 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_454 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_226 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_226 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_455 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_227 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_455 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_227 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_227 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_28 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_56 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_224 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_225 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_226 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_227 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_456 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_457 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_458 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_459 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_57 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_456 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_457 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_458 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_459 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_28 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_460 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_228 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_460 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_228 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_228 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_461 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_229 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_461 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_229 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_229 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_462 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_230 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_462 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_230 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_230 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_463 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_231 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_463 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_231 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_231 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_28 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_57 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_28 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_228 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_229 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_230 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_231 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_28 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_28 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_28 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_464 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_465 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_466 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_467 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_58 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_464 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_465 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_466 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_467 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_468 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_232 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_468 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_232 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_232 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_469 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_233 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_469 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_233 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_233 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_470 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_234 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_470 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_234 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_234 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_471 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_235 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_471 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_235 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_235 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_29 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_58 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_232 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_233 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_234 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_235 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_472 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_473 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_474 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_475 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_59 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_472 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_473 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_474 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_475 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_29 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_476 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_236 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_476 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_236 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_236 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_477 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_237 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_477 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_237 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_237 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_478 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_238 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_478 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_238 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_238 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_479 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_239 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_479 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_239 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_239 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_29 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_59 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_29 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_236 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_237 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_238 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_239 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_29 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_29 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_29 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_480 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_481 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_482 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_483 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_60 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_480 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_481 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_482 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_483 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_484 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_240 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_484 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_240 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_240 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_485 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_241 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_485 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_241 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_241 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_486 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_242 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_486 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_242 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_242 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_487 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_243 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_487 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_243 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_243 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_30 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_60 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_240 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_241 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_242 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_243 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_488 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_489 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_490 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_491 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_61 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_488 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_489 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_490 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_491 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_30 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_492 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_244 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_492 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_244 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_244 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_493 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_245 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_493 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_245 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_245 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_494 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_246 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_494 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_246 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_246 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_495 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_247 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_495 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_247 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_247 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_30 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_61 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_30 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_244 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_245 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_246 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_247 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_30 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_30 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_30 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_496 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_497 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_498 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_499 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_62 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_496 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_497 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_498 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_499 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_500 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_248 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_500 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_248 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_248 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_0.clock <= clock
    io_out_source_valid_0.reset <= reset
    io_out_source_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_501 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_249 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_501 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_249 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_249 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid_1.clock <= clock
    io_out_source_valid_1.reset <= reset
    io_out_source_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_502 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_250 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_502 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_250 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_250 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_extend.clock <= clock
    io_out_sink_extend.reset <= reset
    io_out_sink_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_503 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_251 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_503 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_251 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_251 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid.clock <= clock
    io_out_sink_valid.reset <= reset
    io_out_sink_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSource_31 :
    input clock : Clock
    input reset : Reset
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 71:14]

    wire sink_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 79:28]
    sink_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 79:28]
    reg mem : UInt<16>[8], clock with :
      reset => (UInt<1>("h0"), mem) @[src/main/scala/util/AsyncQueue.scala 80:16]
    node _widx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 81:30]
    node _widx_T_1 = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _widx_T_2 = eq(sink_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 81:77]
    wire widx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg widx_widx_bin : UInt, clock with :
      reset => (_widx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    widx_widx_bin <= widx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _widx_incremented_T = add(widx_widx_bin, _widx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_1 = tail(_widx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _widx_incremented_T_2 = mux(_widx_T_2, UInt<1>("h0"), _widx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    widx_incremented <= _widx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _widx_T_3 = shr(widx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node widx = xor(widx_incremented, _widx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst ridx_ridx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_62 @[src/main/scala/util/ShiftReg.scala 45:23]
    ridx_ridx_gray.clock <= clock
    ridx_ridx_gray.reset <= reset
    ridx_ridx_gray.io.d <= io.async.ridx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire ridx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    ridx <= ridx_ridx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _ready_T = xor(ridx, UInt<4>("hc")) @[src/main/scala/util/AsyncQueue.scala 83:44]
    node _ready_T_1 = neq(widx, _ready_T) @[src/main/scala/util/AsyncQueue.scala 83:34]
    node ready = and(sink_ready, _ready_T_1) @[src/main/scala/util/AsyncQueue.scala 83:26]
    node _index_T = bits(io.async.widx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 85:52]
    node _index_T_1 = bits(io.async.widx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 85:80]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 85:93]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 85:64]
    node _T = and(io.enq.ready, io.enq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    when _T : @[src/main/scala/util/AsyncQueue.scala 86:22]
      mem[index] <= io.enq.bits @[src/main/scala/util/AsyncQueue.scala 86:35]
    node _ready_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 88:35]
    reg ready_reg : UInt<1>, clock with :
      reset => (_ready_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 88:56]
    ready_reg <= ready @[src/main/scala/util/AsyncQueue.scala 88:56]
    node _io_enq_ready_T = and(ready_reg, sink_ready) @[src/main/scala/util/AsyncQueue.scala 89:29]
    io.enq.ready <= _io_enq_ready_T @[src/main/scala/util/AsyncQueue.scala 89:16]
    node _widx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 91:34]
    reg widx_gray : UInt, clock with :
      reset => (_widx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 91:55]
    widx_gray <= widx @[src/main/scala/util/AsyncQueue.scala 91:55]
    io.async.widx <= widx_gray @[src/main/scala/util/AsyncQueue.scala 92:17]
    io.async.mem <= mem @[src/main/scala/util/AsyncQueue.scala 96:31]
    inst source_valid_0 of AsyncValidSync_248 @[src/main/scala/util/AsyncQueue.scala 100:32]
    inst source_valid_1 of AsyncValidSync_249 @[src/main/scala/util/AsyncQueue.scala 101:32]
    inst sink_extend of AsyncValidSync_250 @[src/main/scala/util/AsyncQueue.scala 103:30]
    inst sink_valid of AsyncValidSync_251 @[src/main/scala/util/AsyncQueue.scala 104:30]
    node _source_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 105:36]
    node _source_valid_0_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 105:46]
    node _source_valid_0_reset_T_2 = or(_source_valid_0_reset_T, _source_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 105:43]
    node _source_valid_0_reset_T_3 = asAsyncReset(_source_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 105:65]
    source_valid_0.reset <= _source_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 105:26]
    node _source_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 106:36]
    node _source_valid_1_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 106:46]
    node _source_valid_1_reset_T_2 = or(_source_valid_1_reset_T, _source_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 106:43]
    node _source_valid_1_reset_T_3 = asAsyncReset(_source_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 106:65]
    source_valid_1.reset <= _source_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 106:26]
    node _sink_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 107:36]
    node _sink_extend_reset_T_1 = eq(io.async.safe.sink_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 107:46]
    node _sink_extend_reset_T_2 = or(_sink_extend_reset_T, _sink_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 107:43]
    node _sink_extend_reset_T_3 = asAsyncReset(_sink_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 107:65]
    sink_extend.reset <= _sink_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 107:26]
    node _sink_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 108:35]
    sink_valid.reset <= _sink_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 108:26]
    source_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 110:26]
    source_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 111:26]
    sink_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 112:26]
    sink_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 113:26]
    source_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 115:26]
    source_valid_1.io.in <= source_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 116:26]
    io.async.safe.widx_valid <= source_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 117:20]
    sink_extend.io.in <= io.async.safe.ridx_valid @[src/main/scala/util/AsyncQueue.scala 118:23]
    sink_valid.io.in <= sink_extend.io.out @[src/main/scala/util/AsyncQueue.scala 119:22]
    sink_ready <= sink_valid.io.out @[src/main/scala/util/AsyncQueue.scala 120:16]
    node _io_async_safe_source_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 121:34]
    node _io_async_safe_source_reset_n_T_1 = eq(_io_async_safe_source_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 121:27]
    io.async.safe.source_reset_n <= _io_async_safe_source_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 121:24]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_504 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_505 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_506 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_507 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w4_d3_i0_63 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<4>, q : UInt<4>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_504 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_2 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_3 = bits(io.d, 1, 1) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_1 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_505 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_1.clock <= clock
    output_chain_1.reset <= _output_T_2
    output_chain_1.io.d <= _output_T_3 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_1 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_1 <= output_chain_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_4 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_5 = bits(io.d, 2, 2) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_2 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_506 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_2.clock <= clock
    output_chain_2.reset <= _output_T_4
    output_chain_2.io.d <= _output_T_5 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_2 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_2 <= output_chain_2.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _output_T_6 = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_7 = bits(io.d, 3, 3) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain_3 of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_507 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain_3.clock <= clock
    output_chain_3.reset <= _output_T_6
    output_chain_3.io.d <= _output_T_7 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_3 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_3 <= output_chain_3.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node io_q_lo = cat(output_1, output_0) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node io_q_hi = cat(output_3, output_2) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    node _io_q_T = cat(io_q_hi, io_q_lo) @[src/main/scala/util/SynchronizerReg.scala 90:14]
    io.q <= _io_q_T @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module ClockCrossingReg_w16_31 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<16>, q : UInt<16>, flip en : UInt<1>} @[src/main/scala/util/SynchronizerReg.scala 195:14]

    reg cdc_reg : UInt<16>, clock with :
      reset => (UInt<1>("h0"), cdc_reg) @[src/main/scala/util/SynchronizerReg.scala 201:76]
    when io.en : @[src/main/scala/util/SynchronizerReg.scala 201:76]
      cdc_reg <= io.d @[src/main/scala/util/SynchronizerReg.scala 201:76]
    io.q <= cdc_reg @[src/main/scala/util/SynchronizerReg.scala 202:8]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_508 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_252 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_508 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_252 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_0 of AsyncResetSynchronizerShiftReg_w1_d3_i0_252 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_0.clock <= clock
    io_out_sink_valid_0.reset <= reset
    io_out_sink_valid_0.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_0.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_509 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_253 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_509 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_253 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_sink_valid_1 of AsyncResetSynchronizerShiftReg_w1_d3_i0_253 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_sink_valid_1.clock <= clock
    io_out_sink_valid_1.reset <= reset
    io_out_sink_valid_1.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_sink_valid_1.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_510 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_254 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_510 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_254 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_extend of AsyncResetSynchronizerShiftReg_w1_d3_i0_254 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_extend.clock <= clock
    io_out_source_extend.reset <= reset
    io_out_source_extend.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_extend.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_511 :
    input clock : Clock
    input reset : AsyncReset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    reg sync_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    reg sync_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[src/main/scala/util/SynchronizerReg.scala 51:87]
    node _sync_2_T = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 54:22]
    sync_2 <= _sync_2_T @[src/main/scala/util/SynchronizerReg.scala 54:14]
    sync_0 <= sync_1 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    sync_1 <= sync_2 @[src/main/scala/util/SynchronizerReg.scala 57:10]
    io.q <= sync_0 @[src/main/scala/util/SynchronizerReg.scala 59:8]

  module AsyncResetSynchronizerShiftReg_w1_d3_i0_255 :
    input clock : Clock
    input reset : Reset
    output io : { flip d : UInt<1>, q : UInt<1>} @[src/main/scala/util/ShiftReg.scala 36:14]

    node _output_T = asAsyncReset(reset) @[src/main/scala/util/SynchronizerReg.scala 86:21]
    node _output_T_1 = bits(io.d, 0, 0) @[src/main/scala/util/SynchronizerReg.scala 87:41]
    inst output_chain of AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_511 @[src/main/scala/util/ShiftReg.scala 45:23]
    output_chain.clock <= clock
    output_chain.reset <= _output_T
    output_chain.io.d <= _output_T_1 @[src/main/scala/util/ShiftReg.scala 47:16]
    wire output_0 : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    output_0 <= output_chain.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.q <= output_0 @[src/main/scala/util/SynchronizerReg.scala 90:8]

  module AsyncValidSync_255 :
    output io : { flip in : UInt<1>, out : UInt<1>} @[src/main/scala/util/AsyncQueue.scala 59:14]
    input clock : Clock @[src/main/scala/util/AsyncQueue.scala 63:17]
    input reset : AsyncReset @[src/main/scala/util/AsyncQueue.scala 64:17]

    inst io_out_source_valid of AsyncResetSynchronizerShiftReg_w1_d3_i0_255 @[src/main/scala/util/ShiftReg.scala 45:23]
    io_out_source_valid.clock <= clock
    io_out_source_valid.reset <= reset
    io_out_source_valid.io.d <= io.in @[src/main/scala/util/ShiftReg.scala 47:16]
    wire _io_out_WIRE : UInt<1> @[src/main/scala/util/ShiftReg.scala 48:24]
    _io_out_WIRE <= io_out_source_valid.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    io.out <= _io_out_WIRE @[src/main/scala/util/AsyncQueue.scala 66:12]

  module AsyncQueueSink_31 :
    input clock : Clock
    input reset : Reset
    output io : { deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip async : { mem : UInt<16>[8], flip ridx : UInt<4>, widx : UInt<4>, safe : { flip ridx_valid : UInt<1>, widx_valid : UInt<1>, source_reset_n : UInt<1>, flip sink_reset_n : UInt<1>}}} @[src/main/scala/util/AsyncQueue.scala 135:14]

    wire source_ready : UInt<1> @[src/main/scala/util/AsyncQueue.scala 143:30]
    source_ready <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 143:30]
    node _ridx_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 144:30]
    node _ridx_T_1 = and(io.deq.ready, io.deq.valid) @[src/main/scala/chisel3/util/Decoupled.scala 52:35]
    node _ridx_T_2 = eq(source_ready, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 144:77]
    wire ridx_incremented : UInt<4> @[src/main/scala/util/AsyncQueue.scala 51:27]
    reg ridx_ridx_bin : UInt, clock with :
      reset => (_ridx_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 52:25]
    ridx_ridx_bin <= ridx_incremented @[src/main/scala/util/AsyncQueue.scala 52:25]
    node _ridx_incremented_T = add(ridx_ridx_bin, _ridx_T_1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_1 = tail(_ridx_incremented_T, 1) @[src/main/scala/util/AsyncQueue.scala 53:43]
    node _ridx_incremented_T_2 = mux(_ridx_T_2, UInt<1>("h0"), _ridx_incremented_T_1) @[src/main/scala/util/AsyncQueue.scala 53:23]
    ridx_incremented <= _ridx_incremented_T_2 @[src/main/scala/util/AsyncQueue.scala 53:17]
    node _ridx_T_3 = shr(ridx_incremented, 1) @[src/main/scala/util/AsyncQueue.scala 54:32]
    node ridx = xor(ridx_incremented, _ridx_T_3) @[src/main/scala/util/AsyncQueue.scala 54:17]
    inst widx_widx_gray of AsyncResetSynchronizerShiftReg_w4_d3_i0_63 @[src/main/scala/util/ShiftReg.scala 45:23]
    widx_widx_gray.clock <= clock
    widx_widx_gray.reset <= reset
    widx_widx_gray.io.d <= io.async.widx @[src/main/scala/util/ShiftReg.scala 47:16]
    wire widx : UInt<4> @[src/main/scala/util/ShiftReg.scala 48:24]
    widx <= widx_widx_gray.io.q @[src/main/scala/util/ShiftReg.scala 48:24]
    node _valid_T = neq(ridx, widx) @[src/main/scala/util/AsyncQueue.scala 146:36]
    node valid = and(source_ready, _valid_T) @[src/main/scala/util/AsyncQueue.scala 146:28]
    node _index_T = bits(ridx, 2, 0) @[src/main/scala/util/AsyncQueue.scala 152:43]
    node _index_T_1 = bits(ridx, 3, 3) @[src/main/scala/util/AsyncQueue.scala 152:62]
    node _index_T_2 = shl(_index_T_1, 2) @[src/main/scala/util/AsyncQueue.scala 152:75]
    node index = xor(_index_T, _index_T_2) @[src/main/scala/util/AsyncQueue.scala 152:55]
    inst io_deq_bits_deq_bits_reg of ClockCrossingReg_w16_31 @[src/main/scala/util/SynchronizerReg.scala 207:25]
    io_deq_bits_deq_bits_reg.clock <= clock
    io_deq_bits_deq_bits_reg.reset <= reset
    io_deq_bits_deq_bits_reg.io.d <= io.async.mem[index] @[src/main/scala/util/SynchronizerReg.scala 209:18]
    io_deq_bits_deq_bits_reg.io.en <= valid @[src/main/scala/util/SynchronizerReg.scala 210:19]
    wire _io_deq_bits_WIRE : UInt<16> @[src/main/scala/util/SynchronizerReg.scala 211:26]
    _io_deq_bits_WIRE <= io_deq_bits_deq_bits_reg.io.q @[src/main/scala/util/SynchronizerReg.scala 211:26]
    io.deq.bits <= _io_deq_bits_WIRE @[src/main/scala/util/AsyncQueue.scala 159:15]
    node _valid_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 161:35]
    reg valid_reg : UInt<1>, clock with :
      reset => (_valid_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 161:56]
    valid_reg <= valid @[src/main/scala/util/AsyncQueue.scala 161:56]
    node _io_deq_valid_T = and(valid_reg, source_ready) @[src/main/scala/util/AsyncQueue.scala 162:29]
    io.deq.valid <= _io_deq_valid_T @[src/main/scala/util/AsyncQueue.scala 162:16]
    node _ridx_reg_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 164:34]
    reg ridx_gray : UInt, clock with :
      reset => (_ridx_reg_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 164:55]
    ridx_gray <= ridx @[src/main/scala/util/AsyncQueue.scala 164:55]
    io.async.ridx <= ridx_gray @[src/main/scala/util/AsyncQueue.scala 165:17]
    inst sink_valid_0 of AsyncValidSync_252 @[src/main/scala/util/AsyncQueue.scala 168:33]
    inst sink_valid_1 of AsyncValidSync_253 @[src/main/scala/util/AsyncQueue.scala 169:33]
    inst source_extend of AsyncValidSync_254 @[src/main/scala/util/AsyncQueue.scala 171:31]
    inst source_valid of AsyncValidSync_255 @[src/main/scala/util/AsyncQueue.scala 172:31]
    node _sink_valid_0_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 173:35]
    node _sink_valid_0_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 173:45]
    node _sink_valid_0_reset_T_2 = or(_sink_valid_0_reset_T, _sink_valid_0_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 173:42]
    node _sink_valid_0_reset_T_3 = asAsyncReset(_sink_valid_0_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 173:66]
    sink_valid_0.reset <= _sink_valid_0_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 173:25]
    node _sink_valid_1_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 174:35]
    node _sink_valid_1_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 174:45]
    node _sink_valid_1_reset_T_2 = or(_sink_valid_1_reset_T, _sink_valid_1_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 174:42]
    node _sink_valid_1_reset_T_3 = asAsyncReset(_sink_valid_1_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 174:66]
    sink_valid_1.reset <= _sink_valid_1_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 174:25]
    node _source_extend_reset_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 175:35]
    node _source_extend_reset_T_1 = eq(io.async.safe.source_reset_n, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 175:45]
    node _source_extend_reset_T_2 = or(_source_extend_reset_T, _source_extend_reset_T_1) @[src/main/scala/util/AsyncQueue.scala 175:42]
    node _source_extend_reset_T_3 = asAsyncReset(_source_extend_reset_T_2) @[src/main/scala/util/AsyncQueue.scala 175:66]
    source_extend.reset <= _source_extend_reset_T_3 @[src/main/scala/util/AsyncQueue.scala 175:25]
    node _source_valid_reset_T = asAsyncReset(reset) @[src/main/scala/util/AsyncQueue.scala 176:34]
    source_valid.reset <= _source_valid_reset_T @[src/main/scala/util/AsyncQueue.scala 176:25]
    sink_valid_0.clock <= clock @[src/main/scala/util/AsyncQueue.scala 178:25]
    sink_valid_1.clock <= clock @[src/main/scala/util/AsyncQueue.scala 179:25]
    source_extend.clock <= clock @[src/main/scala/util/AsyncQueue.scala 180:25]
    source_valid.clock <= clock @[src/main/scala/util/AsyncQueue.scala 181:25]
    sink_valid_0.io.in <= UInt<1>("h1") @[src/main/scala/util/AsyncQueue.scala 183:24]
    sink_valid_1.io.in <= sink_valid_0.io.out @[src/main/scala/util/AsyncQueue.scala 184:24]
    io.async.safe.ridx_valid <= sink_valid_1.io.out @[src/main/scala/util/AsyncQueue.scala 185:20]
    source_extend.io.in <= io.async.safe.widx_valid @[src/main/scala/util/AsyncQueue.scala 186:25]
    source_valid.io.in <= source_extend.io.out @[src/main/scala/util/AsyncQueue.scala 187:24]
    source_ready <= source_valid.io.out @[src/main/scala/util/AsyncQueue.scala 188:18]
    node _io_async_safe_sink_reset_n_T = asUInt(reset) @[src/main/scala/util/AsyncQueue.scala 189:32]
    node _io_async_safe_sink_reset_n_T_1 = eq(_io_async_safe_sink_reset_n_T, UInt<1>("h0")) @[src/main/scala/util/AsyncQueue.scala 189:25]
    io.async.safe.sink_reset_n <= _io_async_safe_sink_reset_n_T_1 @[src/main/scala/util/AsyncQueue.scala 189:22]

  module AsyncQueue_31 :
    output io : { flip enq_clock : Clock, flip enq_reset : UInt<1>, flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}, flip deq_clock : Clock, flip deq_reset : UInt<1>, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>}} @[src/main/scala/util/AsyncQueue.scala 223:14]

    inst source of AsyncQueueSource_31 @[src/main/scala/util/AsyncQueue.scala 224:70]
    source.clock <= io.enq_clock
    source.reset <= io.enq_reset
    inst sink of AsyncQueueSink_31 @[src/main/scala/util/AsyncQueue.scala 225:70]
    sink.clock <= io.deq_clock
    sink.reset <= io.deq_reset
    source.io.enq <= io.enq @[src/main/scala/util/AsyncQueue.scala 227:17]
    io.deq.bits <= sink.io.deq.bits @[src/main/scala/util/AsyncQueue.scala 228:10]
    io.deq.valid <= sink.io.deq.valid @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.deq.ready <= io.deq.ready @[src/main/scala/util/AsyncQueue.scala 228:10]
    sink.io.async <= source.io.async @[src/main/scala/util/AsyncQueue.scala 229:17]

  module RxMainband :
    input clock : Clock
    input reset : Reset
    output io : { flip rxMbIo : { data : UInt<16>, valid : UInt<1>, track : UInt<1>, clkp : Clock, clkn : Clock}, txMbAfe : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[16]}, clkn_out : Clock} @[src/main/scala/mbafe/MbAfe.scala 137:16]

    io.clkn_out <= io.rxMbIo.clkn @[src/main/scala/mbafe/MbAfe.scala 152:17]
    inst rxMbFifos_0 of AsyncQueue_16 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_1 of AsyncQueue_17 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_2 of AsyncQueue_18 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_3 of AsyncQueue_19 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_4 of AsyncQueue_20 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_5 of AsyncQueue_21 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_6 of AsyncQueue_22 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_7 of AsyncQueue_23 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_8 of AsyncQueue_24 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_9 of AsyncQueue_25 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_10 of AsyncQueue_26 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_11 of AsyncQueue_27 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_12 of AsyncQueue_28 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_13 of AsyncQueue_29 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_14 of AsyncQueue_30 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    inst rxMbFifos_15 of AsyncQueue_31 @[src/main/scala/mbafe/MbAfe.scala 160:44]
    reg mbIoValid_pipe_0 : UInt<1>, io.rxMbIo.clkp with :
      reset => (UInt<1>("h0"), mbIoValid_pipe_0) @[src/main/scala/mbafe/MbAfe.scala 169:39]
    mbIoValid_pipe_0 <= io.rxMbIo.valid @[src/main/scala/mbafe/MbAfe.scala 169:39]
    reg mbIoValid_pipe_1 : UInt<1>, io.rxMbIo.clkp with :
      reset => (UInt<1>("h0"), mbIoValid_pipe_1) @[src/main/scala/mbafe/MbAfe.scala 170:39]
    mbIoValid_pipe_1 <= mbIoValid_pipe_0 @[src/main/scala/mbafe/MbAfe.scala 170:39]
    reg mbIoValid_pipe_2 : UInt<1>, io.rxMbIo.clkp with :
      reset => (UInt<1>("h0"), mbIoValid_pipe_2) @[src/main/scala/mbafe/MbAfe.scala 171:39]
    mbIoValid_pipe_2 <= mbIoValid_pipe_1 @[src/main/scala/mbafe/MbAfe.scala 171:39]
    reg mbIoValid_next : UInt<1>, io.rxMbIo.clkp with :
      reset => (UInt<1>("h0"), mbIoValid_next) @[src/main/scala/mbafe/MbAfe.scala 172:37]
    mbIoValid_next <= mbIoValid_pipe_2 @[src/main/scala/mbafe/MbAfe.scala 172:37]
    reg rxMbShiftRegs_0 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_1 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_2 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_3 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_4 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_5 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_6 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_7 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_8 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_9 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_10 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_11 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_12 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_13 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_14 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_15 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 175:52]
    reg rxMbShiftRegs_next_0 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_1 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_2 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_3 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_4 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_5 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_6 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_7 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_8 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_9 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_10 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_11 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_12 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_13 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_14 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    reg rxMbShiftRegs_next_15 : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 176:57]
    wire rxMbShiftRegs_xor_0 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_0 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_1 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_1 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_2 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_2 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_3 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_3 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_4 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_4 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_5 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_5 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_6 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_6 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_7 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_7 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_8 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_8 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_9 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_9 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_10 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_10 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_11 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_11 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_12 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_12 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_13 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_13 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_14 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_14 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    wire rxMbShiftRegs_xor_15 : UInt<16> @[src/main/scala/mbafe/MbAfe.scala 177:57]
    rxMbShiftRegs_xor_15 <= UInt<16>("h0") @[src/main/scala/mbafe/MbAfe.scala 177:57]
    reg rxMbUICounter : UInt<4>, io.rxMbIo.clkp with :
      reset => (reset, UInt<4>("h0")) @[src/main/scala/mbafe/MbAfe.scala 179:36]
    reg rxMbUICounter_next : UInt, io.rxMbIo.clkp with :
      reset => (UInt<1>("h0"), rxMbUICounter_next) @[src/main/scala/mbafe/MbAfe.scala 181:41]
    rxMbUICounter_next <= rxMbUICounter @[src/main/scala/mbafe/MbAfe.scala 181:41]
    reg rxMbIoData_next : UInt<16>, io.rxMbIo.clkp with :
      reset => (reset, UInt<16>("h0")) @[src/main/scala/mbafe/MbAfe.scala 184:38]
    node _fifo_enq_valid_next_T = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 185:62]
    node _fifo_enq_valid_next_T_1 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 185:95]
    node _fifo_enq_valid_next_T_2 = and(_fifo_enq_valid_next_T, _fifo_enq_valid_next_T_1) @[src/main/scala/mbafe/MbAfe.scala 185:78]
    reg fifo_enq_valid_next : UInt<1>, io.rxMbIo.clkp with :
      reset => (UInt<1>("h0"), fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 185:42]
    fifo_enq_valid_next <= _fifo_enq_valid_next_T_2 @[src/main/scala/mbafe/MbAfe.scala 185:42]
    node _internal_valid_T = xor(mbIoValid_next, io.rxMbIo.valid) @[src/main/scala/mbafe/MbAfe.scala 186:46]
    node _internal_valid_T_1 = and(mbIoValid_next, io.rxMbIo.valid) @[src/main/scala/mbafe/MbAfe.scala 186:83]
    node internal_valid = or(_internal_valid_T, _internal_valid_T_1) @[src/main/scala/mbafe/MbAfe.scala 186:65]
    rxMbFifos_0.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_0.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_0.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_0.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_1 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_1 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_0 <= rxMbShiftRegs_0 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_2 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_3 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_4 = or(_rxMbShiftRegs_0_T_2, _rxMbShiftRegs_0_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_2 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_3 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_4 = or(_rxMbShiftRegs_1_T_2, _rxMbShiftRegs_1_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_2 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_3 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_4 = or(_rxMbShiftRegs_2_T_2, _rxMbShiftRegs_2_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_2 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_3 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_4 = or(_rxMbShiftRegs_3_T_2, _rxMbShiftRegs_3_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_2 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_3 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_4 = or(_rxMbShiftRegs_4_T_2, _rxMbShiftRegs_4_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_2 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_3 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_4 = or(_rxMbShiftRegs_5_T_2, _rxMbShiftRegs_5_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_2 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_3 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_4 = or(_rxMbShiftRegs_6_T_2, _rxMbShiftRegs_6_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_2 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_3 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_4 = or(_rxMbShiftRegs_7_T_2, _rxMbShiftRegs_7_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_2 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_3 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_4 = or(_rxMbShiftRegs_8_T_2, _rxMbShiftRegs_8_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_2 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_3 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_4 = or(_rxMbShiftRegs_9_T_2, _rxMbShiftRegs_9_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_2 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_3 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_4 = or(_rxMbShiftRegs_10_T_2, _rxMbShiftRegs_10_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_2 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_3 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_4 = or(_rxMbShiftRegs_11_T_2, _rxMbShiftRegs_11_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_2 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_3 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_4 = or(_rxMbShiftRegs_12_T_2, _rxMbShiftRegs_12_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_2 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_3 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_4 = or(_rxMbShiftRegs_13_T_2, _rxMbShiftRegs_13_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_2 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_3 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_4 = or(_rxMbShiftRegs_14_T_2, _rxMbShiftRegs_14_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_2 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_3 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_4 = or(_rxMbShiftRegs_15_T_2, _rxMbShiftRegs_15_T_3) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_4 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_0 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_1 = tail(_rxMbUICounter_T, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_1 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_0_T = xor(rxMbShiftRegs_0, rxMbShiftRegs_next_0) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_0 <= _rxMbShiftRegs_xor_0_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_1 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_2 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_3 = and(_T_1, _T_2) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_4 = xor(_T_3, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_4 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_0.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_0_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_0_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_0_io_enq_bits_lo_lo = cat(rxMbFifos_0_io_enq_bits_lo_lo_hi, rxMbFifos_0_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_0_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_0_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_0_io_enq_bits_lo_hi = cat(rxMbFifos_0_io_enq_bits_lo_hi_hi, rxMbFifos_0_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_0_io_enq_bits_lo = cat(rxMbFifos_0_io_enq_bits_lo_hi, rxMbFifos_0_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_0_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_0_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_0_io_enq_bits_hi_lo = cat(rxMbFifos_0_io_enq_bits_hi_lo_hi, rxMbFifos_0_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_0_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_0_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_0_io_enq_bits_hi_hi = cat(rxMbFifos_0_io_enq_bits_hi_hi_hi, rxMbFifos_0_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_0_io_enq_bits_hi = cat(rxMbFifos_0_io_enq_bits_hi_hi, rxMbFifos_0_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_0_io_enq_bits_T = cat(rxMbFifos_0_io_enq_bits_hi, rxMbFifos_0_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_0.io.enq.bits <= _rxMbFifos_0_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_1.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_1.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_1.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_1.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_5 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_5 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_5 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_5 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_5 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_5 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_5 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_5 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_5 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_5 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_5 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_5 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_5 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_5 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_5 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_5 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_5 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_5 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_6 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_5) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_6 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_1 <= rxMbShiftRegs_1 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_7 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_8 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_9 = or(_rxMbShiftRegs_0_T_7, _rxMbShiftRegs_0_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_7 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_8 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_9 = or(_rxMbShiftRegs_1_T_7, _rxMbShiftRegs_1_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_7 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_8 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_9 = or(_rxMbShiftRegs_2_T_7, _rxMbShiftRegs_2_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_7 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_8 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_9 = or(_rxMbShiftRegs_3_T_7, _rxMbShiftRegs_3_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_7 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_8 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_9 = or(_rxMbShiftRegs_4_T_7, _rxMbShiftRegs_4_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_7 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_8 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_9 = or(_rxMbShiftRegs_5_T_7, _rxMbShiftRegs_5_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_7 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_8 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_9 = or(_rxMbShiftRegs_6_T_7, _rxMbShiftRegs_6_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_7 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_8 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_9 = or(_rxMbShiftRegs_7_T_7, _rxMbShiftRegs_7_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_7 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_8 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_9 = or(_rxMbShiftRegs_8_T_7, _rxMbShiftRegs_8_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_7 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_8 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_9 = or(_rxMbShiftRegs_9_T_7, _rxMbShiftRegs_9_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_7 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_8 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_9 = or(_rxMbShiftRegs_10_T_7, _rxMbShiftRegs_10_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_7 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_8 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_9 = or(_rxMbShiftRegs_11_T_7, _rxMbShiftRegs_11_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_7 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_8 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_9 = or(_rxMbShiftRegs_12_T_7, _rxMbShiftRegs_12_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_7 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_8 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_9 = or(_rxMbShiftRegs_13_T_7, _rxMbShiftRegs_13_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_7 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_8 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_9 = or(_rxMbShiftRegs_14_T_7, _rxMbShiftRegs_14_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_7 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_8 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_9 = or(_rxMbShiftRegs_15_T_7, _rxMbShiftRegs_15_T_8) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_9 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_1 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_2 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_3 = tail(_rxMbUICounter_T_2, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_3 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_1_T = xor(rxMbShiftRegs_1, rxMbShiftRegs_next_1) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_1 <= _rxMbShiftRegs_xor_1_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_6 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_7 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_8 = and(_T_6, _T_7) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_9 = xor(_T_8, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_9 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_1.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_1_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_1_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_1_io_enq_bits_lo_lo = cat(rxMbFifos_1_io_enq_bits_lo_lo_hi, rxMbFifos_1_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_1_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_1_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_1_io_enq_bits_lo_hi = cat(rxMbFifos_1_io_enq_bits_lo_hi_hi, rxMbFifos_1_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_1_io_enq_bits_lo = cat(rxMbFifos_1_io_enq_bits_lo_hi, rxMbFifos_1_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_1_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_1_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_1_io_enq_bits_hi_lo = cat(rxMbFifos_1_io_enq_bits_hi_lo_hi, rxMbFifos_1_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_1_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_1_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_1_io_enq_bits_hi_hi = cat(rxMbFifos_1_io_enq_bits_hi_hi_hi, rxMbFifos_1_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_1_io_enq_bits_hi = cat(rxMbFifos_1_io_enq_bits_hi_hi, rxMbFifos_1_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_1_io_enq_bits_T = cat(rxMbFifos_1_io_enq_bits_hi, rxMbFifos_1_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_1.io.enq.bits <= _rxMbFifos_1_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_2.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_2.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_2.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_2.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_10 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_10 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_10 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_10 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_10 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_10 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_10 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_10 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_10 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_10 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_10 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_10 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_10 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_10 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_10 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_10 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_10 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_10 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_11 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_10) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_11 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_2 <= rxMbShiftRegs_2 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_12 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_13 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_14 = or(_rxMbShiftRegs_0_T_12, _rxMbShiftRegs_0_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_12 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_13 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_14 = or(_rxMbShiftRegs_1_T_12, _rxMbShiftRegs_1_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_12 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_13 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_14 = or(_rxMbShiftRegs_2_T_12, _rxMbShiftRegs_2_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_12 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_13 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_14 = or(_rxMbShiftRegs_3_T_12, _rxMbShiftRegs_3_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_12 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_13 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_14 = or(_rxMbShiftRegs_4_T_12, _rxMbShiftRegs_4_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_12 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_13 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_14 = or(_rxMbShiftRegs_5_T_12, _rxMbShiftRegs_5_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_12 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_13 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_14 = or(_rxMbShiftRegs_6_T_12, _rxMbShiftRegs_6_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_12 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_13 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_14 = or(_rxMbShiftRegs_7_T_12, _rxMbShiftRegs_7_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_12 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_13 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_14 = or(_rxMbShiftRegs_8_T_12, _rxMbShiftRegs_8_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_12 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_13 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_14 = or(_rxMbShiftRegs_9_T_12, _rxMbShiftRegs_9_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_12 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_13 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_14 = or(_rxMbShiftRegs_10_T_12, _rxMbShiftRegs_10_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_12 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_13 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_14 = or(_rxMbShiftRegs_11_T_12, _rxMbShiftRegs_11_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_12 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_13 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_14 = or(_rxMbShiftRegs_12_T_12, _rxMbShiftRegs_12_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_12 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_13 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_14 = or(_rxMbShiftRegs_13_T_12, _rxMbShiftRegs_13_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_12 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_13 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_14 = or(_rxMbShiftRegs_14_T_12, _rxMbShiftRegs_14_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_12 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_13 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_14 = or(_rxMbShiftRegs_15_T_12, _rxMbShiftRegs_15_T_13) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_14 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_2 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_4 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_5 = tail(_rxMbUICounter_T_4, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_5 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_2_T = xor(rxMbShiftRegs_2, rxMbShiftRegs_next_2) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_2 <= _rxMbShiftRegs_xor_2_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_11 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_12 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_13 = and(_T_11, _T_12) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_14 = xor(_T_13, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_14 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_2.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_2_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_2_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_2_io_enq_bits_lo_lo = cat(rxMbFifos_2_io_enq_bits_lo_lo_hi, rxMbFifos_2_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_2_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_2_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_2_io_enq_bits_lo_hi = cat(rxMbFifos_2_io_enq_bits_lo_hi_hi, rxMbFifos_2_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_2_io_enq_bits_lo = cat(rxMbFifos_2_io_enq_bits_lo_hi, rxMbFifos_2_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_2_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_2_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_2_io_enq_bits_hi_lo = cat(rxMbFifos_2_io_enq_bits_hi_lo_hi, rxMbFifos_2_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_2_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_2_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_2_io_enq_bits_hi_hi = cat(rxMbFifos_2_io_enq_bits_hi_hi_hi, rxMbFifos_2_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_2_io_enq_bits_hi = cat(rxMbFifos_2_io_enq_bits_hi_hi, rxMbFifos_2_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_2_io_enq_bits_T = cat(rxMbFifos_2_io_enq_bits_hi, rxMbFifos_2_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_2.io.enq.bits <= _rxMbFifos_2_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_3.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_3.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_3.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_3.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_15 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_15 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_15 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_15 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_15 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_15 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_15 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_15 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_15 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_15 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_15 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_15 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_15 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_15 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_15 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_15 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_15 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_15 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_16 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_15) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_16 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_3 <= rxMbShiftRegs_3 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_17 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_18 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_19 = or(_rxMbShiftRegs_0_T_17, _rxMbShiftRegs_0_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_17 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_18 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_19 = or(_rxMbShiftRegs_1_T_17, _rxMbShiftRegs_1_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_17 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_18 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_19 = or(_rxMbShiftRegs_2_T_17, _rxMbShiftRegs_2_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_17 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_18 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_19 = or(_rxMbShiftRegs_3_T_17, _rxMbShiftRegs_3_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_17 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_18 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_19 = or(_rxMbShiftRegs_4_T_17, _rxMbShiftRegs_4_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_17 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_18 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_19 = or(_rxMbShiftRegs_5_T_17, _rxMbShiftRegs_5_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_17 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_18 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_19 = or(_rxMbShiftRegs_6_T_17, _rxMbShiftRegs_6_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_17 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_18 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_19 = or(_rxMbShiftRegs_7_T_17, _rxMbShiftRegs_7_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_17 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_18 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_19 = or(_rxMbShiftRegs_8_T_17, _rxMbShiftRegs_8_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_17 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_18 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_19 = or(_rxMbShiftRegs_9_T_17, _rxMbShiftRegs_9_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_17 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_18 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_19 = or(_rxMbShiftRegs_10_T_17, _rxMbShiftRegs_10_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_17 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_18 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_19 = or(_rxMbShiftRegs_11_T_17, _rxMbShiftRegs_11_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_17 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_18 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_19 = or(_rxMbShiftRegs_12_T_17, _rxMbShiftRegs_12_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_17 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_18 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_19 = or(_rxMbShiftRegs_13_T_17, _rxMbShiftRegs_13_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_17 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_18 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_19 = or(_rxMbShiftRegs_14_T_17, _rxMbShiftRegs_14_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_17 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_18 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_19 = or(_rxMbShiftRegs_15_T_17, _rxMbShiftRegs_15_T_18) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_19 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_3 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_6 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_7 = tail(_rxMbUICounter_T_6, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_7 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_3_T = xor(rxMbShiftRegs_3, rxMbShiftRegs_next_3) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_3 <= _rxMbShiftRegs_xor_3_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_16 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_17 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_18 = and(_T_16, _T_17) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_19 = xor(_T_18, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_19 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_3.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_3_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_3_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_3_io_enq_bits_lo_lo = cat(rxMbFifos_3_io_enq_bits_lo_lo_hi, rxMbFifos_3_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_3_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_3_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_3_io_enq_bits_lo_hi = cat(rxMbFifos_3_io_enq_bits_lo_hi_hi, rxMbFifos_3_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_3_io_enq_bits_lo = cat(rxMbFifos_3_io_enq_bits_lo_hi, rxMbFifos_3_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_3_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_3_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_3_io_enq_bits_hi_lo = cat(rxMbFifos_3_io_enq_bits_hi_lo_hi, rxMbFifos_3_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_3_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_3_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_3_io_enq_bits_hi_hi = cat(rxMbFifos_3_io_enq_bits_hi_hi_hi, rxMbFifos_3_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_3_io_enq_bits_hi = cat(rxMbFifos_3_io_enq_bits_hi_hi, rxMbFifos_3_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_3_io_enq_bits_T = cat(rxMbFifos_3_io_enq_bits_hi, rxMbFifos_3_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_3.io.enq.bits <= _rxMbFifos_3_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_4.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_4.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_4.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_4.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_20 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_20 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_20 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_20 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_20 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_20 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_20 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_20 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_20 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_20 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_20 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_20 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_20 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_20 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_20 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_20 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_20 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_20 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_21 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_20) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_21 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_4 <= rxMbShiftRegs_4 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_22 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_23 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_24 = or(_rxMbShiftRegs_0_T_22, _rxMbShiftRegs_0_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_22 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_23 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_24 = or(_rxMbShiftRegs_1_T_22, _rxMbShiftRegs_1_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_22 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_23 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_24 = or(_rxMbShiftRegs_2_T_22, _rxMbShiftRegs_2_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_22 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_23 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_24 = or(_rxMbShiftRegs_3_T_22, _rxMbShiftRegs_3_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_22 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_23 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_24 = or(_rxMbShiftRegs_4_T_22, _rxMbShiftRegs_4_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_22 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_23 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_24 = or(_rxMbShiftRegs_5_T_22, _rxMbShiftRegs_5_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_22 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_23 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_24 = or(_rxMbShiftRegs_6_T_22, _rxMbShiftRegs_6_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_22 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_23 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_24 = or(_rxMbShiftRegs_7_T_22, _rxMbShiftRegs_7_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_22 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_23 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_24 = or(_rxMbShiftRegs_8_T_22, _rxMbShiftRegs_8_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_22 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_23 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_24 = or(_rxMbShiftRegs_9_T_22, _rxMbShiftRegs_9_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_22 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_23 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_24 = or(_rxMbShiftRegs_10_T_22, _rxMbShiftRegs_10_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_22 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_23 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_24 = or(_rxMbShiftRegs_11_T_22, _rxMbShiftRegs_11_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_22 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_23 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_24 = or(_rxMbShiftRegs_12_T_22, _rxMbShiftRegs_12_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_22 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_23 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_24 = or(_rxMbShiftRegs_13_T_22, _rxMbShiftRegs_13_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_22 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_23 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_24 = or(_rxMbShiftRegs_14_T_22, _rxMbShiftRegs_14_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_22 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_23 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_24 = or(_rxMbShiftRegs_15_T_22, _rxMbShiftRegs_15_T_23) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_24 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_4 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_8 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_9 = tail(_rxMbUICounter_T_8, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_9 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_4_T = xor(rxMbShiftRegs_4, rxMbShiftRegs_next_4) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_4 <= _rxMbShiftRegs_xor_4_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_21 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_22 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_23 = and(_T_21, _T_22) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_24 = xor(_T_23, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_24 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_4.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_4_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_4_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_4_io_enq_bits_lo_lo = cat(rxMbFifos_4_io_enq_bits_lo_lo_hi, rxMbFifos_4_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_4_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_4_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_4_io_enq_bits_lo_hi = cat(rxMbFifos_4_io_enq_bits_lo_hi_hi, rxMbFifos_4_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_4_io_enq_bits_lo = cat(rxMbFifos_4_io_enq_bits_lo_hi, rxMbFifos_4_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_4_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_4_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_4_io_enq_bits_hi_lo = cat(rxMbFifos_4_io_enq_bits_hi_lo_hi, rxMbFifos_4_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_4_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_4_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_4_io_enq_bits_hi_hi = cat(rxMbFifos_4_io_enq_bits_hi_hi_hi, rxMbFifos_4_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_4_io_enq_bits_hi = cat(rxMbFifos_4_io_enq_bits_hi_hi, rxMbFifos_4_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_4_io_enq_bits_T = cat(rxMbFifos_4_io_enq_bits_hi, rxMbFifos_4_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_4.io.enq.bits <= _rxMbFifos_4_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_5.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_5.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_5.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_5.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_25 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_25 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_25 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_25 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_25 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_25 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_25 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_25 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_25 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_25 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_25 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_25 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_25 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_25 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_25 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_25 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_25 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_25 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_26 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_25) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_26 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_5 <= rxMbShiftRegs_5 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_27 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_28 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_29 = or(_rxMbShiftRegs_0_T_27, _rxMbShiftRegs_0_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_27 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_28 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_29 = or(_rxMbShiftRegs_1_T_27, _rxMbShiftRegs_1_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_27 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_28 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_29 = or(_rxMbShiftRegs_2_T_27, _rxMbShiftRegs_2_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_27 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_28 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_29 = or(_rxMbShiftRegs_3_T_27, _rxMbShiftRegs_3_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_27 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_28 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_29 = or(_rxMbShiftRegs_4_T_27, _rxMbShiftRegs_4_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_27 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_28 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_29 = or(_rxMbShiftRegs_5_T_27, _rxMbShiftRegs_5_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_27 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_28 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_29 = or(_rxMbShiftRegs_6_T_27, _rxMbShiftRegs_6_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_27 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_28 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_29 = or(_rxMbShiftRegs_7_T_27, _rxMbShiftRegs_7_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_27 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_28 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_29 = or(_rxMbShiftRegs_8_T_27, _rxMbShiftRegs_8_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_27 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_28 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_29 = or(_rxMbShiftRegs_9_T_27, _rxMbShiftRegs_9_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_27 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_28 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_29 = or(_rxMbShiftRegs_10_T_27, _rxMbShiftRegs_10_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_27 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_28 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_29 = or(_rxMbShiftRegs_11_T_27, _rxMbShiftRegs_11_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_27 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_28 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_29 = or(_rxMbShiftRegs_12_T_27, _rxMbShiftRegs_12_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_27 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_28 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_29 = or(_rxMbShiftRegs_13_T_27, _rxMbShiftRegs_13_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_27 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_28 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_29 = or(_rxMbShiftRegs_14_T_27, _rxMbShiftRegs_14_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_27 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_28 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_29 = or(_rxMbShiftRegs_15_T_27, _rxMbShiftRegs_15_T_28) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_29 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_5 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_10 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_11 = tail(_rxMbUICounter_T_10, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_11 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_5_T = xor(rxMbShiftRegs_5, rxMbShiftRegs_next_5) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_5 <= _rxMbShiftRegs_xor_5_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_26 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_27 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_28 = and(_T_26, _T_27) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_29 = xor(_T_28, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_29 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_5.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_5_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_5_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_5_io_enq_bits_lo_lo = cat(rxMbFifos_5_io_enq_bits_lo_lo_hi, rxMbFifos_5_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_5_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_5_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_5_io_enq_bits_lo_hi = cat(rxMbFifos_5_io_enq_bits_lo_hi_hi, rxMbFifos_5_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_5_io_enq_bits_lo = cat(rxMbFifos_5_io_enq_bits_lo_hi, rxMbFifos_5_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_5_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_5_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_5_io_enq_bits_hi_lo = cat(rxMbFifos_5_io_enq_bits_hi_lo_hi, rxMbFifos_5_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_5_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_5_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_5_io_enq_bits_hi_hi = cat(rxMbFifos_5_io_enq_bits_hi_hi_hi, rxMbFifos_5_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_5_io_enq_bits_hi = cat(rxMbFifos_5_io_enq_bits_hi_hi, rxMbFifos_5_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_5_io_enq_bits_T = cat(rxMbFifos_5_io_enq_bits_hi, rxMbFifos_5_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_5.io.enq.bits <= _rxMbFifos_5_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_6.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_6.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_6.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_6.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_30 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_30 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_30 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_30 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_30 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_30 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_30 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_30 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_30 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_30 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_30 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_30 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_30 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_30 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_30 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_30 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_30 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_30 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_31 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_30) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_31 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_6 <= rxMbShiftRegs_6 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_32 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_33 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_34 = or(_rxMbShiftRegs_0_T_32, _rxMbShiftRegs_0_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_32 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_33 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_34 = or(_rxMbShiftRegs_1_T_32, _rxMbShiftRegs_1_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_32 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_33 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_34 = or(_rxMbShiftRegs_2_T_32, _rxMbShiftRegs_2_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_32 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_33 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_34 = or(_rxMbShiftRegs_3_T_32, _rxMbShiftRegs_3_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_32 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_33 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_34 = or(_rxMbShiftRegs_4_T_32, _rxMbShiftRegs_4_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_32 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_33 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_34 = or(_rxMbShiftRegs_5_T_32, _rxMbShiftRegs_5_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_32 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_33 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_34 = or(_rxMbShiftRegs_6_T_32, _rxMbShiftRegs_6_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_32 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_33 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_34 = or(_rxMbShiftRegs_7_T_32, _rxMbShiftRegs_7_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_32 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_33 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_34 = or(_rxMbShiftRegs_8_T_32, _rxMbShiftRegs_8_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_32 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_33 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_34 = or(_rxMbShiftRegs_9_T_32, _rxMbShiftRegs_9_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_32 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_33 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_34 = or(_rxMbShiftRegs_10_T_32, _rxMbShiftRegs_10_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_32 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_33 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_34 = or(_rxMbShiftRegs_11_T_32, _rxMbShiftRegs_11_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_32 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_33 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_34 = or(_rxMbShiftRegs_12_T_32, _rxMbShiftRegs_12_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_32 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_33 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_34 = or(_rxMbShiftRegs_13_T_32, _rxMbShiftRegs_13_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_32 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_33 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_34 = or(_rxMbShiftRegs_14_T_32, _rxMbShiftRegs_14_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_32 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_33 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_34 = or(_rxMbShiftRegs_15_T_32, _rxMbShiftRegs_15_T_33) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_34 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_6 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_12 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_13 = tail(_rxMbUICounter_T_12, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_13 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_6_T = xor(rxMbShiftRegs_6, rxMbShiftRegs_next_6) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_6 <= _rxMbShiftRegs_xor_6_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_31 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_32 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_33 = and(_T_31, _T_32) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_34 = xor(_T_33, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_34 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_6.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_6_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_6_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_6_io_enq_bits_lo_lo = cat(rxMbFifos_6_io_enq_bits_lo_lo_hi, rxMbFifos_6_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_6_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_6_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_6_io_enq_bits_lo_hi = cat(rxMbFifos_6_io_enq_bits_lo_hi_hi, rxMbFifos_6_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_6_io_enq_bits_lo = cat(rxMbFifos_6_io_enq_bits_lo_hi, rxMbFifos_6_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_6_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_6_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_6_io_enq_bits_hi_lo = cat(rxMbFifos_6_io_enq_bits_hi_lo_hi, rxMbFifos_6_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_6_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_6_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_6_io_enq_bits_hi_hi = cat(rxMbFifos_6_io_enq_bits_hi_hi_hi, rxMbFifos_6_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_6_io_enq_bits_hi = cat(rxMbFifos_6_io_enq_bits_hi_hi, rxMbFifos_6_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_6_io_enq_bits_T = cat(rxMbFifos_6_io_enq_bits_hi, rxMbFifos_6_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_6.io.enq.bits <= _rxMbFifos_6_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_7.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_7.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_7.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_7.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_35 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_35 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_35 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_35 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_35 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_35 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_35 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_35 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_35 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_35 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_35 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_35 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_35 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_35 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_35 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_35 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_35 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_35 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_36 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_35) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_36 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_7 <= rxMbShiftRegs_7 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_37 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_38 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_39 = or(_rxMbShiftRegs_0_T_37, _rxMbShiftRegs_0_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_37 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_38 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_39 = or(_rxMbShiftRegs_1_T_37, _rxMbShiftRegs_1_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_37 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_38 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_39 = or(_rxMbShiftRegs_2_T_37, _rxMbShiftRegs_2_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_37 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_38 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_39 = or(_rxMbShiftRegs_3_T_37, _rxMbShiftRegs_3_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_37 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_38 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_39 = or(_rxMbShiftRegs_4_T_37, _rxMbShiftRegs_4_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_37 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_38 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_39 = or(_rxMbShiftRegs_5_T_37, _rxMbShiftRegs_5_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_37 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_38 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_39 = or(_rxMbShiftRegs_6_T_37, _rxMbShiftRegs_6_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_37 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_38 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_39 = or(_rxMbShiftRegs_7_T_37, _rxMbShiftRegs_7_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_37 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_38 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_39 = or(_rxMbShiftRegs_8_T_37, _rxMbShiftRegs_8_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_37 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_38 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_39 = or(_rxMbShiftRegs_9_T_37, _rxMbShiftRegs_9_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_37 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_38 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_39 = or(_rxMbShiftRegs_10_T_37, _rxMbShiftRegs_10_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_37 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_38 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_39 = or(_rxMbShiftRegs_11_T_37, _rxMbShiftRegs_11_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_37 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_38 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_39 = or(_rxMbShiftRegs_12_T_37, _rxMbShiftRegs_12_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_37 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_38 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_39 = or(_rxMbShiftRegs_13_T_37, _rxMbShiftRegs_13_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_37 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_38 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_39 = or(_rxMbShiftRegs_14_T_37, _rxMbShiftRegs_14_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_37 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_38 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_39 = or(_rxMbShiftRegs_15_T_37, _rxMbShiftRegs_15_T_38) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_39 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_7 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_14 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_15 = tail(_rxMbUICounter_T_14, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_15 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_7_T = xor(rxMbShiftRegs_7, rxMbShiftRegs_next_7) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_7 <= _rxMbShiftRegs_xor_7_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_36 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_37 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_38 = and(_T_36, _T_37) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_39 = xor(_T_38, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_39 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_7.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_7_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_7_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_7_io_enq_bits_lo_lo = cat(rxMbFifos_7_io_enq_bits_lo_lo_hi, rxMbFifos_7_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_7_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_7_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_7_io_enq_bits_lo_hi = cat(rxMbFifos_7_io_enq_bits_lo_hi_hi, rxMbFifos_7_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_7_io_enq_bits_lo = cat(rxMbFifos_7_io_enq_bits_lo_hi, rxMbFifos_7_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_7_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_7_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_7_io_enq_bits_hi_lo = cat(rxMbFifos_7_io_enq_bits_hi_lo_hi, rxMbFifos_7_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_7_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_7_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_7_io_enq_bits_hi_hi = cat(rxMbFifos_7_io_enq_bits_hi_hi_hi, rxMbFifos_7_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_7_io_enq_bits_hi = cat(rxMbFifos_7_io_enq_bits_hi_hi, rxMbFifos_7_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_7_io_enq_bits_T = cat(rxMbFifos_7_io_enq_bits_hi, rxMbFifos_7_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_7.io.enq.bits <= _rxMbFifos_7_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_8.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_8.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_8.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_8.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_40 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_40 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_40 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_40 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_40 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_40 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_40 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_40 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_40 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_40 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_40 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_40 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_40 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_40 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_40 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_40 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_40 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_40 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_41 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_40) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_41 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_8 <= rxMbShiftRegs_8 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_42 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_43 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_44 = or(_rxMbShiftRegs_0_T_42, _rxMbShiftRegs_0_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_42 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_43 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_44 = or(_rxMbShiftRegs_1_T_42, _rxMbShiftRegs_1_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_42 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_43 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_44 = or(_rxMbShiftRegs_2_T_42, _rxMbShiftRegs_2_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_42 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_43 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_44 = or(_rxMbShiftRegs_3_T_42, _rxMbShiftRegs_3_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_42 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_43 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_44 = or(_rxMbShiftRegs_4_T_42, _rxMbShiftRegs_4_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_42 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_43 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_44 = or(_rxMbShiftRegs_5_T_42, _rxMbShiftRegs_5_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_42 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_43 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_44 = or(_rxMbShiftRegs_6_T_42, _rxMbShiftRegs_6_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_42 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_43 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_44 = or(_rxMbShiftRegs_7_T_42, _rxMbShiftRegs_7_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_42 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_43 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_44 = or(_rxMbShiftRegs_8_T_42, _rxMbShiftRegs_8_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_42 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_43 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_44 = or(_rxMbShiftRegs_9_T_42, _rxMbShiftRegs_9_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_42 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_43 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_44 = or(_rxMbShiftRegs_10_T_42, _rxMbShiftRegs_10_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_42 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_43 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_44 = or(_rxMbShiftRegs_11_T_42, _rxMbShiftRegs_11_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_42 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_43 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_44 = or(_rxMbShiftRegs_12_T_42, _rxMbShiftRegs_12_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_42 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_43 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_44 = or(_rxMbShiftRegs_13_T_42, _rxMbShiftRegs_13_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_42 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_43 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_44 = or(_rxMbShiftRegs_14_T_42, _rxMbShiftRegs_14_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_42 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_43 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_44 = or(_rxMbShiftRegs_15_T_42, _rxMbShiftRegs_15_T_43) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_44 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_8 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_16 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_17 = tail(_rxMbUICounter_T_16, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_17 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_8_T = xor(rxMbShiftRegs_8, rxMbShiftRegs_next_8) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_8 <= _rxMbShiftRegs_xor_8_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_41 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_42 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_43 = and(_T_41, _T_42) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_44 = xor(_T_43, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_44 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_8.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_8_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_8_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_8_io_enq_bits_lo_lo = cat(rxMbFifos_8_io_enq_bits_lo_lo_hi, rxMbFifos_8_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_8_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_8_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_8_io_enq_bits_lo_hi = cat(rxMbFifos_8_io_enq_bits_lo_hi_hi, rxMbFifos_8_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_8_io_enq_bits_lo = cat(rxMbFifos_8_io_enq_bits_lo_hi, rxMbFifos_8_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_8_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_8_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_8_io_enq_bits_hi_lo = cat(rxMbFifos_8_io_enq_bits_hi_lo_hi, rxMbFifos_8_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_8_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_8_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_8_io_enq_bits_hi_hi = cat(rxMbFifos_8_io_enq_bits_hi_hi_hi, rxMbFifos_8_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_8_io_enq_bits_hi = cat(rxMbFifos_8_io_enq_bits_hi_hi, rxMbFifos_8_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_8_io_enq_bits_T = cat(rxMbFifos_8_io_enq_bits_hi, rxMbFifos_8_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_8.io.enq.bits <= _rxMbFifos_8_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_9.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_9.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_9.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_9.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_45 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_45 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_45 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_45 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_45 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_45 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_45 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_45 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_45 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_45 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_45 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_45 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_45 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_45 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_45 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_45 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_45 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_45 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_46 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_45) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_46 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_9 <= rxMbShiftRegs_9 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_47 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_48 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_49 = or(_rxMbShiftRegs_0_T_47, _rxMbShiftRegs_0_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_47 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_48 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_49 = or(_rxMbShiftRegs_1_T_47, _rxMbShiftRegs_1_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_47 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_48 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_49 = or(_rxMbShiftRegs_2_T_47, _rxMbShiftRegs_2_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_47 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_48 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_49 = or(_rxMbShiftRegs_3_T_47, _rxMbShiftRegs_3_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_47 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_48 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_49 = or(_rxMbShiftRegs_4_T_47, _rxMbShiftRegs_4_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_47 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_48 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_49 = or(_rxMbShiftRegs_5_T_47, _rxMbShiftRegs_5_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_47 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_48 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_49 = or(_rxMbShiftRegs_6_T_47, _rxMbShiftRegs_6_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_47 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_48 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_49 = or(_rxMbShiftRegs_7_T_47, _rxMbShiftRegs_7_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_47 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_48 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_49 = or(_rxMbShiftRegs_8_T_47, _rxMbShiftRegs_8_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_47 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_48 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_49 = or(_rxMbShiftRegs_9_T_47, _rxMbShiftRegs_9_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_47 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_48 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_49 = or(_rxMbShiftRegs_10_T_47, _rxMbShiftRegs_10_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_47 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_48 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_49 = or(_rxMbShiftRegs_11_T_47, _rxMbShiftRegs_11_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_47 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_48 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_49 = or(_rxMbShiftRegs_12_T_47, _rxMbShiftRegs_12_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_47 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_48 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_49 = or(_rxMbShiftRegs_13_T_47, _rxMbShiftRegs_13_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_47 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_48 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_49 = or(_rxMbShiftRegs_14_T_47, _rxMbShiftRegs_14_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_47 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_48 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_49 = or(_rxMbShiftRegs_15_T_47, _rxMbShiftRegs_15_T_48) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_49 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_9 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_18 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_19 = tail(_rxMbUICounter_T_18, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_19 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_9_T = xor(rxMbShiftRegs_9, rxMbShiftRegs_next_9) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_9 <= _rxMbShiftRegs_xor_9_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_46 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_47 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_48 = and(_T_46, _T_47) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_49 = xor(_T_48, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_49 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_9.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_9_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_9_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_9_io_enq_bits_lo_lo = cat(rxMbFifos_9_io_enq_bits_lo_lo_hi, rxMbFifos_9_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_9_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_9_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_9_io_enq_bits_lo_hi = cat(rxMbFifos_9_io_enq_bits_lo_hi_hi, rxMbFifos_9_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_9_io_enq_bits_lo = cat(rxMbFifos_9_io_enq_bits_lo_hi, rxMbFifos_9_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_9_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_9_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_9_io_enq_bits_hi_lo = cat(rxMbFifos_9_io_enq_bits_hi_lo_hi, rxMbFifos_9_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_9_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_9_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_9_io_enq_bits_hi_hi = cat(rxMbFifos_9_io_enq_bits_hi_hi_hi, rxMbFifos_9_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_9_io_enq_bits_hi = cat(rxMbFifos_9_io_enq_bits_hi_hi, rxMbFifos_9_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_9_io_enq_bits_T = cat(rxMbFifos_9_io_enq_bits_hi, rxMbFifos_9_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_9.io.enq.bits <= _rxMbFifos_9_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_10.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_10.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_10.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_10.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_50 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_50 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_50 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_50 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_50 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_50 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_50 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_50 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_50 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_50 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_50 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_50 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_50 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_50 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_50 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_50 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_50 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_50 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_51 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_50) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_51 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_10 <= rxMbShiftRegs_10 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_52 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_53 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_54 = or(_rxMbShiftRegs_0_T_52, _rxMbShiftRegs_0_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_52 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_53 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_54 = or(_rxMbShiftRegs_1_T_52, _rxMbShiftRegs_1_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_52 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_53 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_54 = or(_rxMbShiftRegs_2_T_52, _rxMbShiftRegs_2_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_52 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_53 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_54 = or(_rxMbShiftRegs_3_T_52, _rxMbShiftRegs_3_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_52 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_53 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_54 = or(_rxMbShiftRegs_4_T_52, _rxMbShiftRegs_4_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_52 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_53 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_54 = or(_rxMbShiftRegs_5_T_52, _rxMbShiftRegs_5_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_52 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_53 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_54 = or(_rxMbShiftRegs_6_T_52, _rxMbShiftRegs_6_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_52 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_53 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_54 = or(_rxMbShiftRegs_7_T_52, _rxMbShiftRegs_7_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_52 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_53 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_54 = or(_rxMbShiftRegs_8_T_52, _rxMbShiftRegs_8_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_52 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_53 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_54 = or(_rxMbShiftRegs_9_T_52, _rxMbShiftRegs_9_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_52 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_53 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_54 = or(_rxMbShiftRegs_10_T_52, _rxMbShiftRegs_10_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_52 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_53 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_54 = or(_rxMbShiftRegs_11_T_52, _rxMbShiftRegs_11_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_52 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_53 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_54 = or(_rxMbShiftRegs_12_T_52, _rxMbShiftRegs_12_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_52 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_53 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_54 = or(_rxMbShiftRegs_13_T_52, _rxMbShiftRegs_13_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_52 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_53 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_54 = or(_rxMbShiftRegs_14_T_52, _rxMbShiftRegs_14_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_52 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_53 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_54 = or(_rxMbShiftRegs_15_T_52, _rxMbShiftRegs_15_T_53) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_54 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_10 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_20 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_21 = tail(_rxMbUICounter_T_20, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_21 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_10_T = xor(rxMbShiftRegs_10, rxMbShiftRegs_next_10) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_10 <= _rxMbShiftRegs_xor_10_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_51 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_52 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_53 = and(_T_51, _T_52) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_54 = xor(_T_53, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_54 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_10.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_10_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_10_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_10_io_enq_bits_lo_lo = cat(rxMbFifos_10_io_enq_bits_lo_lo_hi, rxMbFifos_10_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_10_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_10_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_10_io_enq_bits_lo_hi = cat(rxMbFifos_10_io_enq_bits_lo_hi_hi, rxMbFifos_10_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_10_io_enq_bits_lo = cat(rxMbFifos_10_io_enq_bits_lo_hi, rxMbFifos_10_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_10_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_10_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_10_io_enq_bits_hi_lo = cat(rxMbFifos_10_io_enq_bits_hi_lo_hi, rxMbFifos_10_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_10_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_10_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_10_io_enq_bits_hi_hi = cat(rxMbFifos_10_io_enq_bits_hi_hi_hi, rxMbFifos_10_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_10_io_enq_bits_hi = cat(rxMbFifos_10_io_enq_bits_hi_hi, rxMbFifos_10_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_10_io_enq_bits_T = cat(rxMbFifos_10_io_enq_bits_hi, rxMbFifos_10_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_10.io.enq.bits <= _rxMbFifos_10_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_11.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_11.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_11.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_11.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_55 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_55 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_55 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_55 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_55 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_55 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_55 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_55 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_55 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_55 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_55 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_55 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_55 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_55 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_55 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_55 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_55 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_55 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_56 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_55) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_56 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_11 <= rxMbShiftRegs_11 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_57 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_58 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_59 = or(_rxMbShiftRegs_0_T_57, _rxMbShiftRegs_0_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_57 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_58 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_59 = or(_rxMbShiftRegs_1_T_57, _rxMbShiftRegs_1_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_57 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_58 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_59 = or(_rxMbShiftRegs_2_T_57, _rxMbShiftRegs_2_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_57 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_58 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_59 = or(_rxMbShiftRegs_3_T_57, _rxMbShiftRegs_3_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_57 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_58 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_59 = or(_rxMbShiftRegs_4_T_57, _rxMbShiftRegs_4_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_57 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_58 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_59 = or(_rxMbShiftRegs_5_T_57, _rxMbShiftRegs_5_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_57 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_58 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_59 = or(_rxMbShiftRegs_6_T_57, _rxMbShiftRegs_6_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_57 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_58 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_59 = or(_rxMbShiftRegs_7_T_57, _rxMbShiftRegs_7_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_57 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_58 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_59 = or(_rxMbShiftRegs_8_T_57, _rxMbShiftRegs_8_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_57 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_58 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_59 = or(_rxMbShiftRegs_9_T_57, _rxMbShiftRegs_9_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_57 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_58 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_59 = or(_rxMbShiftRegs_10_T_57, _rxMbShiftRegs_10_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_57 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_58 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_59 = or(_rxMbShiftRegs_11_T_57, _rxMbShiftRegs_11_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_57 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_58 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_59 = or(_rxMbShiftRegs_12_T_57, _rxMbShiftRegs_12_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_57 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_58 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_59 = or(_rxMbShiftRegs_13_T_57, _rxMbShiftRegs_13_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_57 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_58 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_59 = or(_rxMbShiftRegs_14_T_57, _rxMbShiftRegs_14_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_57 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_58 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_59 = or(_rxMbShiftRegs_15_T_57, _rxMbShiftRegs_15_T_58) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_59 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_11 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_22 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_23 = tail(_rxMbUICounter_T_22, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_23 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_11_T = xor(rxMbShiftRegs_11, rxMbShiftRegs_next_11) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_11 <= _rxMbShiftRegs_xor_11_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_56 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_57 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_58 = and(_T_56, _T_57) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_59 = xor(_T_58, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_59 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_11.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_11_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_11_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_11_io_enq_bits_lo_lo = cat(rxMbFifos_11_io_enq_bits_lo_lo_hi, rxMbFifos_11_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_11_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_11_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_11_io_enq_bits_lo_hi = cat(rxMbFifos_11_io_enq_bits_lo_hi_hi, rxMbFifos_11_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_11_io_enq_bits_lo = cat(rxMbFifos_11_io_enq_bits_lo_hi, rxMbFifos_11_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_11_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_11_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_11_io_enq_bits_hi_lo = cat(rxMbFifos_11_io_enq_bits_hi_lo_hi, rxMbFifos_11_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_11_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_11_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_11_io_enq_bits_hi_hi = cat(rxMbFifos_11_io_enq_bits_hi_hi_hi, rxMbFifos_11_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_11_io_enq_bits_hi = cat(rxMbFifos_11_io_enq_bits_hi_hi, rxMbFifos_11_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_11_io_enq_bits_T = cat(rxMbFifos_11_io_enq_bits_hi, rxMbFifos_11_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_11.io.enq.bits <= _rxMbFifos_11_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_12.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_12.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_12.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_12.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_60 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_60 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_60 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_60 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_60 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_60 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_60 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_60 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_60 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_60 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_60 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_60 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_60 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_60 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_60 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_60 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_60 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_60 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_61 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_60) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_61 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_12 <= rxMbShiftRegs_12 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_62 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_63 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_64 = or(_rxMbShiftRegs_0_T_62, _rxMbShiftRegs_0_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_62 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_63 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_64 = or(_rxMbShiftRegs_1_T_62, _rxMbShiftRegs_1_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_62 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_63 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_64 = or(_rxMbShiftRegs_2_T_62, _rxMbShiftRegs_2_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_62 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_63 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_64 = or(_rxMbShiftRegs_3_T_62, _rxMbShiftRegs_3_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_62 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_63 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_64 = or(_rxMbShiftRegs_4_T_62, _rxMbShiftRegs_4_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_62 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_63 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_64 = or(_rxMbShiftRegs_5_T_62, _rxMbShiftRegs_5_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_62 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_63 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_64 = or(_rxMbShiftRegs_6_T_62, _rxMbShiftRegs_6_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_62 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_63 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_64 = or(_rxMbShiftRegs_7_T_62, _rxMbShiftRegs_7_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_62 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_63 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_64 = or(_rxMbShiftRegs_8_T_62, _rxMbShiftRegs_8_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_62 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_63 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_64 = or(_rxMbShiftRegs_9_T_62, _rxMbShiftRegs_9_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_62 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_63 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_64 = or(_rxMbShiftRegs_10_T_62, _rxMbShiftRegs_10_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_62 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_63 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_64 = or(_rxMbShiftRegs_11_T_62, _rxMbShiftRegs_11_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_62 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_63 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_64 = or(_rxMbShiftRegs_12_T_62, _rxMbShiftRegs_12_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_62 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_63 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_64 = or(_rxMbShiftRegs_13_T_62, _rxMbShiftRegs_13_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_62 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_63 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_64 = or(_rxMbShiftRegs_14_T_62, _rxMbShiftRegs_14_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_62 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_63 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_64 = or(_rxMbShiftRegs_15_T_62, _rxMbShiftRegs_15_T_63) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_64 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_12 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_24 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_25 = tail(_rxMbUICounter_T_24, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_25 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_12_T = xor(rxMbShiftRegs_12, rxMbShiftRegs_next_12) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_12 <= _rxMbShiftRegs_xor_12_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_61 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_62 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_63 = and(_T_61, _T_62) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_64 = xor(_T_63, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_64 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_12.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_12_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_12_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_12_io_enq_bits_lo_lo = cat(rxMbFifos_12_io_enq_bits_lo_lo_hi, rxMbFifos_12_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_12_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_12_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_12_io_enq_bits_lo_hi = cat(rxMbFifos_12_io_enq_bits_lo_hi_hi, rxMbFifos_12_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_12_io_enq_bits_lo = cat(rxMbFifos_12_io_enq_bits_lo_hi, rxMbFifos_12_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_12_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_12_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_12_io_enq_bits_hi_lo = cat(rxMbFifos_12_io_enq_bits_hi_lo_hi, rxMbFifos_12_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_12_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_12_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_12_io_enq_bits_hi_hi = cat(rxMbFifos_12_io_enq_bits_hi_hi_hi, rxMbFifos_12_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_12_io_enq_bits_hi = cat(rxMbFifos_12_io_enq_bits_hi_hi, rxMbFifos_12_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_12_io_enq_bits_T = cat(rxMbFifos_12_io_enq_bits_hi, rxMbFifos_12_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_12.io.enq.bits <= _rxMbFifos_12_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_13.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_13.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_13.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_13.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_65 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_65 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_65 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_65 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_65 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_65 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_65 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_65 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_65 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_65 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_65 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_65 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_65 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_65 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_65 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_65 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_65 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_65 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_66 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_65) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_66 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_13 <= rxMbShiftRegs_13 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_67 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_68 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_69 = or(_rxMbShiftRegs_0_T_67, _rxMbShiftRegs_0_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_67 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_68 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_69 = or(_rxMbShiftRegs_1_T_67, _rxMbShiftRegs_1_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_67 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_68 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_69 = or(_rxMbShiftRegs_2_T_67, _rxMbShiftRegs_2_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_67 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_68 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_69 = or(_rxMbShiftRegs_3_T_67, _rxMbShiftRegs_3_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_67 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_68 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_69 = or(_rxMbShiftRegs_4_T_67, _rxMbShiftRegs_4_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_67 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_68 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_69 = or(_rxMbShiftRegs_5_T_67, _rxMbShiftRegs_5_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_67 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_68 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_69 = or(_rxMbShiftRegs_6_T_67, _rxMbShiftRegs_6_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_67 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_68 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_69 = or(_rxMbShiftRegs_7_T_67, _rxMbShiftRegs_7_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_67 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_68 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_69 = or(_rxMbShiftRegs_8_T_67, _rxMbShiftRegs_8_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_67 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_68 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_69 = or(_rxMbShiftRegs_9_T_67, _rxMbShiftRegs_9_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_67 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_68 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_69 = or(_rxMbShiftRegs_10_T_67, _rxMbShiftRegs_10_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_67 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_68 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_69 = or(_rxMbShiftRegs_11_T_67, _rxMbShiftRegs_11_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_67 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_68 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_69 = or(_rxMbShiftRegs_12_T_67, _rxMbShiftRegs_12_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_67 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_68 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_69 = or(_rxMbShiftRegs_13_T_67, _rxMbShiftRegs_13_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_67 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_68 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_69 = or(_rxMbShiftRegs_14_T_67, _rxMbShiftRegs_14_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_67 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_68 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_69 = or(_rxMbShiftRegs_15_T_67, _rxMbShiftRegs_15_T_68) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_69 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_13 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_26 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_27 = tail(_rxMbUICounter_T_26, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_27 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_13_T = xor(rxMbShiftRegs_13, rxMbShiftRegs_next_13) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_13 <= _rxMbShiftRegs_xor_13_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_66 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_67 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_68 = and(_T_66, _T_67) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_69 = xor(_T_68, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_69 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_13.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_13_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_13_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_13_io_enq_bits_lo_lo = cat(rxMbFifos_13_io_enq_bits_lo_lo_hi, rxMbFifos_13_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_13_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_13_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_13_io_enq_bits_lo_hi = cat(rxMbFifos_13_io_enq_bits_lo_hi_hi, rxMbFifos_13_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_13_io_enq_bits_lo = cat(rxMbFifos_13_io_enq_bits_lo_hi, rxMbFifos_13_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_13_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_13_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_13_io_enq_bits_hi_lo = cat(rxMbFifos_13_io_enq_bits_hi_lo_hi, rxMbFifos_13_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_13_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_13_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_13_io_enq_bits_hi_hi = cat(rxMbFifos_13_io_enq_bits_hi_hi_hi, rxMbFifos_13_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_13_io_enq_bits_hi = cat(rxMbFifos_13_io_enq_bits_hi_hi, rxMbFifos_13_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_13_io_enq_bits_T = cat(rxMbFifos_13_io_enq_bits_hi, rxMbFifos_13_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_13.io.enq.bits <= _rxMbFifos_13_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_14.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_14.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_14.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_14.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_70 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_70 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_70 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_70 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_70 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_70 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_70 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_70 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_70 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_70 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_70 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_70 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_70 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_70 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_70 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_70 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_70 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_70 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_71 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_70) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_71 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_14 <= rxMbShiftRegs_14 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_72 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_73 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_74 = or(_rxMbShiftRegs_0_T_72, _rxMbShiftRegs_0_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_72 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_73 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_74 = or(_rxMbShiftRegs_1_T_72, _rxMbShiftRegs_1_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_72 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_73 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_74 = or(_rxMbShiftRegs_2_T_72, _rxMbShiftRegs_2_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_72 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_73 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_74 = or(_rxMbShiftRegs_3_T_72, _rxMbShiftRegs_3_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_72 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_73 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_74 = or(_rxMbShiftRegs_4_T_72, _rxMbShiftRegs_4_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_72 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_73 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_74 = or(_rxMbShiftRegs_5_T_72, _rxMbShiftRegs_5_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_72 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_73 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_74 = or(_rxMbShiftRegs_6_T_72, _rxMbShiftRegs_6_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_72 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_73 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_74 = or(_rxMbShiftRegs_7_T_72, _rxMbShiftRegs_7_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_72 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_73 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_74 = or(_rxMbShiftRegs_8_T_72, _rxMbShiftRegs_8_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_72 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_73 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_74 = or(_rxMbShiftRegs_9_T_72, _rxMbShiftRegs_9_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_72 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_73 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_74 = or(_rxMbShiftRegs_10_T_72, _rxMbShiftRegs_10_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_72 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_73 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_74 = or(_rxMbShiftRegs_11_T_72, _rxMbShiftRegs_11_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_72 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_73 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_74 = or(_rxMbShiftRegs_12_T_72, _rxMbShiftRegs_12_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_72 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_73 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_74 = or(_rxMbShiftRegs_13_T_72, _rxMbShiftRegs_13_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_72 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_73 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_74 = or(_rxMbShiftRegs_14_T_72, _rxMbShiftRegs_14_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_72 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_73 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_74 = or(_rxMbShiftRegs_15_T_72, _rxMbShiftRegs_15_T_73) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_74 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_14 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_28 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_29 = tail(_rxMbUICounter_T_28, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_29 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_14_T = xor(rxMbShiftRegs_14, rxMbShiftRegs_next_14) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_14 <= _rxMbShiftRegs_xor_14_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_71 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_72 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_73 = and(_T_71, _T_72) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_74 = xor(_T_73, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_74 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_14.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_14_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_14_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_14_io_enq_bits_lo_lo = cat(rxMbFifos_14_io_enq_bits_lo_lo_hi, rxMbFifos_14_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_14_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_14_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_14_io_enq_bits_lo_hi = cat(rxMbFifos_14_io_enq_bits_lo_hi_hi, rxMbFifos_14_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_14_io_enq_bits_lo = cat(rxMbFifos_14_io_enq_bits_lo_hi, rxMbFifos_14_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_14_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_14_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_14_io_enq_bits_hi_lo = cat(rxMbFifos_14_io_enq_bits_hi_lo_hi, rxMbFifos_14_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_14_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_14_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_14_io_enq_bits_hi_hi = cat(rxMbFifos_14_io_enq_bits_hi_hi_hi, rxMbFifos_14_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_14_io_enq_bits_hi = cat(rxMbFifos_14_io_enq_bits_hi_hi, rxMbFifos_14_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_14_io_enq_bits_T = cat(rxMbFifos_14_io_enq_bits_hi, rxMbFifos_14_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_14.io.enq.bits <= _rxMbFifos_14_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_15.io.enq_clock <= io.rxMbIo.clkp @[src/main/scala/mbafe/MbAfe.scala 190:35]
    rxMbFifos_15.io.enq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 191:35]
    rxMbFifos_15.io.enq.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 192:35]
    rxMbFifos_15.io.enq.bits <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 194:34]
    when internal_valid : @[src/main/scala/mbafe/MbAfe.scala 198:33]
      rxMbIoData_next <= io.rxMbIo.data @[src/main/scala/mbafe/MbAfe.scala 199:33]
      node _T_75 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 200:36]
      when _T_75 : @[src/main/scala/mbafe/MbAfe.scala 200:45]
        node _rxMbShiftRegs_0_T_75 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_0_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_0_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_1_T_75 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_1_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_1_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_2_T_75 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_2_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_2_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_3_T_75 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_3_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_3_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_4_T_75 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_4_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_4_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_5_T_75 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_5_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_5_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_6_T_75 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_6_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_6_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_7_T_75 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_7_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_7_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_8_T_75 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_8_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_8_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_9_T_75 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_9_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_9_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_10_T_75 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_10_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_10_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_11_T_75 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_11_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_11_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_12_T_75 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_12_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_12_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_13_T_75 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_13_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_13_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_14_T_75 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_14_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_14_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        node _rxMbShiftRegs_15_T_75 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 202:66]
        node _rxMbShiftRegs_15_T_76 = or(UInt<1>("h0"), _rxMbShiftRegs_15_T_75) @[src/main/scala/mbafe/MbAfe.scala 202:49]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_76 @[src/main/scala/mbafe/MbAfe.scala 202:42]
        rxMbShiftRegs_next_15 <= rxMbShiftRegs_15 @[src/main/scala/mbafe/MbAfe.scala 204:43]
      else :
        node _rxMbShiftRegs_0_T_77 = dshl(rxMbShiftRegs_0, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_0_T_78 = bits(io.rxMbIo.data, 0, 0) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_0_T_79 = or(_rxMbShiftRegs_0_T_77, _rxMbShiftRegs_0_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_0 <= _rxMbShiftRegs_0_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_1_T_77 = dshl(rxMbShiftRegs_1, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_1_T_78 = bits(io.rxMbIo.data, 1, 1) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_1_T_79 = or(_rxMbShiftRegs_1_T_77, _rxMbShiftRegs_1_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_1 <= _rxMbShiftRegs_1_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_2_T_77 = dshl(rxMbShiftRegs_2, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_2_T_78 = bits(io.rxMbIo.data, 2, 2) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_2_T_79 = or(_rxMbShiftRegs_2_T_77, _rxMbShiftRegs_2_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_2 <= _rxMbShiftRegs_2_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_3_T_77 = dshl(rxMbShiftRegs_3, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_3_T_78 = bits(io.rxMbIo.data, 3, 3) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_3_T_79 = or(_rxMbShiftRegs_3_T_77, _rxMbShiftRegs_3_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_3 <= _rxMbShiftRegs_3_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_4_T_77 = dshl(rxMbShiftRegs_4, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_4_T_78 = bits(io.rxMbIo.data, 4, 4) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_4_T_79 = or(_rxMbShiftRegs_4_T_77, _rxMbShiftRegs_4_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_4 <= _rxMbShiftRegs_4_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_5_T_77 = dshl(rxMbShiftRegs_5, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_5_T_78 = bits(io.rxMbIo.data, 5, 5) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_5_T_79 = or(_rxMbShiftRegs_5_T_77, _rxMbShiftRegs_5_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_5 <= _rxMbShiftRegs_5_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_6_T_77 = dshl(rxMbShiftRegs_6, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_6_T_78 = bits(io.rxMbIo.data, 6, 6) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_6_T_79 = or(_rxMbShiftRegs_6_T_77, _rxMbShiftRegs_6_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_6 <= _rxMbShiftRegs_6_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_7_T_77 = dshl(rxMbShiftRegs_7, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_7_T_78 = bits(io.rxMbIo.data, 7, 7) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_7_T_79 = or(_rxMbShiftRegs_7_T_77, _rxMbShiftRegs_7_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_7 <= _rxMbShiftRegs_7_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_8_T_77 = dshl(rxMbShiftRegs_8, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_8_T_78 = bits(io.rxMbIo.data, 8, 8) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_8_T_79 = or(_rxMbShiftRegs_8_T_77, _rxMbShiftRegs_8_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_8 <= _rxMbShiftRegs_8_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_9_T_77 = dshl(rxMbShiftRegs_9, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_9_T_78 = bits(io.rxMbIo.data, 9, 9) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_9_T_79 = or(_rxMbShiftRegs_9_T_77, _rxMbShiftRegs_9_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_9 <= _rxMbShiftRegs_9_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_10_T_77 = dshl(rxMbShiftRegs_10, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_10_T_78 = bits(io.rxMbIo.data, 10, 10) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_10_T_79 = or(_rxMbShiftRegs_10_T_77, _rxMbShiftRegs_10_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_10 <= _rxMbShiftRegs_10_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_11_T_77 = dshl(rxMbShiftRegs_11, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_11_T_78 = bits(io.rxMbIo.data, 11, 11) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_11_T_79 = or(_rxMbShiftRegs_11_T_77, _rxMbShiftRegs_11_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_11 <= _rxMbShiftRegs_11_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_12_T_77 = dshl(rxMbShiftRegs_12, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_12_T_78 = bits(io.rxMbIo.data, 12, 12) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_12_T_79 = or(_rxMbShiftRegs_12_T_77, _rxMbShiftRegs_12_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_12 <= _rxMbShiftRegs_12_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_13_T_77 = dshl(rxMbShiftRegs_13, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_13_T_78 = bits(io.rxMbIo.data, 13, 13) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_13_T_79 = or(_rxMbShiftRegs_13_T_77, _rxMbShiftRegs_13_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_13 <= _rxMbShiftRegs_13_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_14_T_77 = dshl(rxMbShiftRegs_14, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_14_T_78 = bits(io.rxMbIo.data, 14, 14) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_14_T_79 = or(_rxMbShiftRegs_14_T_77, _rxMbShiftRegs_14_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_14 <= _rxMbShiftRegs_14_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        node _rxMbShiftRegs_15_T_77 = dshl(rxMbShiftRegs_15, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 208:62]
        node _rxMbShiftRegs_15_T_78 = bits(io.rxMbIo.data, 15, 15) @[src/main/scala/mbafe/MbAfe.scala 208:86]
        node _rxMbShiftRegs_15_T_79 = or(_rxMbShiftRegs_15_T_77, _rxMbShiftRegs_15_T_78) @[src/main/scala/mbafe/MbAfe.scala 208:69]
        rxMbShiftRegs_15 <= _rxMbShiftRegs_15_T_79 @[src/main/scala/mbafe/MbAfe.scala 208:42]
        rxMbShiftRegs_next_15 <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 210:43]
      node _rxMbUICounter_T_30 = add(rxMbUICounter, UInt<1>("h1")) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      node _rxMbUICounter_T_31 = tail(_rxMbUICounter_T_30, 1) @[src/main/scala/mbafe/MbAfe.scala 213:48]
      rxMbUICounter <= _rxMbUICounter_T_31 @[src/main/scala/mbafe/MbAfe.scala 213:31]
    node _rxMbShiftRegs_xor_15_T = xor(rxMbShiftRegs_15, rxMbShiftRegs_next_15) @[src/main/scala/mbafe/MbAfe.scala 215:54]
    rxMbShiftRegs_xor_15 <= _rxMbShiftRegs_xor_15_T @[src/main/scala/mbafe/MbAfe.scala 215:34]
    node _T_76 = eq(rxMbUICounter_next, UInt<4>("hf")) @[src/main/scala/mbafe/MbAfe.scala 216:38]
    node _T_77 = eq(rxMbUICounter, UInt<1>("h0")) @[src/main/scala/mbafe/MbAfe.scala 216:71]
    node _T_78 = and(_T_76, _T_77) @[src/main/scala/mbafe/MbAfe.scala 216:54]
    node _T_79 = xor(_T_78, fifo_enq_valid_next) @[src/main/scala/mbafe/MbAfe.scala 217:17]
    when _T_79 : @[src/main/scala/mbafe/MbAfe.scala 218:19]
      rxMbFifos_15.io.enq.valid <= UInt<1>("h1") @[src/main/scala/mbafe/MbAfe.scala 219:39]
      node rxMbFifos_15_io_enq_bits_lo_lo_lo = cat(rxMbShiftRegs_xor_1, rxMbShiftRegs_xor_0) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_15_io_enq_bits_lo_lo_hi = cat(rxMbShiftRegs_xor_3, rxMbShiftRegs_xor_2) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_15_io_enq_bits_lo_lo = cat(rxMbFifos_15_io_enq_bits_lo_lo_hi, rxMbFifos_15_io_enq_bits_lo_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_15_io_enq_bits_lo_hi_lo = cat(rxMbShiftRegs_xor_5, rxMbShiftRegs_xor_4) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_15_io_enq_bits_lo_hi_hi = cat(rxMbShiftRegs_xor_7, rxMbShiftRegs_xor_6) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_15_io_enq_bits_lo_hi = cat(rxMbFifos_15_io_enq_bits_lo_hi_hi, rxMbFifos_15_io_enq_bits_lo_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_15_io_enq_bits_lo = cat(rxMbFifos_15_io_enq_bits_lo_hi, rxMbFifos_15_io_enq_bits_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_15_io_enq_bits_hi_lo_lo = cat(rxMbShiftRegs_xor_9, rxMbShiftRegs_xor_8) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_15_io_enq_bits_hi_lo_hi = cat(rxMbShiftRegs_xor_11, rxMbShiftRegs_xor_10) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_15_io_enq_bits_hi_lo = cat(rxMbFifos_15_io_enq_bits_hi_lo_hi, rxMbFifos_15_io_enq_bits_hi_lo_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_15_io_enq_bits_hi_hi_lo = cat(rxMbShiftRegs_xor_13, rxMbShiftRegs_xor_12) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_15_io_enq_bits_hi_hi_hi = cat(rxMbShiftRegs_xor_15, rxMbShiftRegs_xor_14) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_15_io_enq_bits_hi_hi = cat(rxMbFifos_15_io_enq_bits_hi_hi_hi, rxMbFifos_15_io_enq_bits_hi_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node rxMbFifos_15_io_enq_bits_hi = cat(rxMbFifos_15_io_enq_bits_hi_hi, rxMbFifos_15_io_enq_bits_hi_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      node _rxMbFifos_15_io_enq_bits_T = cat(rxMbFifos_15_io_enq_bits_hi, rxMbFifos_15_io_enq_bits_lo) @[src/main/scala/mbafe/MbAfe.scala 220:44]
      rxMbFifos_15.io.enq.bits <= _rxMbFifos_15_io_enq_bits_T @[src/main/scala/mbafe/MbAfe.scala 220:38]
    rxMbFifos_0.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_0.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[0] <= rxMbFifos_0.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_0.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_0.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_1.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_1.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[1] <= rxMbFifos_1.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_1.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_1.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_2.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_2.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[2] <= rxMbFifos_2.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_2.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_2.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_3.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_3.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[3] <= rxMbFifos_3.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_3.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_3.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_4.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_4.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[4] <= rxMbFifos_4.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_4.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_4.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_5.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_5.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[5] <= rxMbFifos_5.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_5.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_5.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_6.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_6.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[6] <= rxMbFifos_6.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_6.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_6.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_7.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_7.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[7] <= rxMbFifos_7.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_7.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_7.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_8.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_8.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[8] <= rxMbFifos_8.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_8.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_8.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_9.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_9.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[9] <= rxMbFifos_9.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_9.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_9.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_10.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_10.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[10] <= rxMbFifos_10.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_10.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_10.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_11.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_11.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[11] <= rxMbFifos_11.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_11.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_11.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_12.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_12.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[12] <= rxMbFifos_12.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_12.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_12.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_13.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_13.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[13] <= rxMbFifos_13.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_13.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_13.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_14.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_14.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[14] <= rxMbFifos_14.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_14.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_14.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]
    rxMbFifos_15.io.deq_clock <= clock @[src/main/scala/mbafe/MbAfe.scala 229:35]
    rxMbFifos_15.io.deq_reset <= reset @[src/main/scala/mbafe/MbAfe.scala 230:35]
    io.txMbAfe.bits[15] <= rxMbFifos_15.io.deq.bits @[src/main/scala/mbafe/MbAfe.scala 231:33]
    io.txMbAfe.valid <= rxMbFifos_15.io.deq.valid @[src/main/scala/mbafe/MbAfe.scala 232:31]
    rxMbFifos_15.io.deq.ready <= io.txMbAfe.ready @[src/main/scala/mbafe/MbAfe.scala 233:35]

  module PhyTest :
    input clock : Clock
    input reset : UInt<1>
    output io : { tx_user : { flip fifoParams : { clk : Clock, reset : UInt<1>}, txData : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[16]}, flip rxData : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[16]}, txFreqSel : UInt<3>, rxEn : UInt<1>, flip pllLock : UInt<1>}, rx_user : { flip fifoParams : { clk : Clock, reset : UInt<1>}, txData : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[16]}, flip rxData : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<16>[16]}, txFreqSel : UInt<3>, rxEn : UInt<1>, flip pllLock : UInt<1>}, flip clkp : Clock, flip clkn : Clock, clkn_out : Clock} @[src/main/scala/mbafe/MbAfe.scala 352:16]

    inst sender of TxMainband @[src/main/scala/mbafe/MbAfe.scala 363:24]
    sender.clock <= clock
    sender.reset <= reset
    inst receiver of RxMainband @[src/main/scala/mbafe/MbAfe.scala 364:26]
    receiver.clock <= clock
    receiver.reset <= reset
    sender.io.rxMbAfe <= io.tx_user.rxData @[src/main/scala/mbafe/MbAfe.scala 365:23]
    receiver.io.rxMbIo <= sender.io.txMbIo @[src/main/scala/mbafe/MbAfe.scala 366:23]
    sender.io.clkp <= io.clkp @[src/main/scala/mbafe/MbAfe.scala 367:20]
    sender.io.clkn <= io.clkn @[src/main/scala/mbafe/MbAfe.scala 368:20]
    sender.io.track <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 369:21]
    io.rx_user.txData.bits[0] <= receiver.io.txMbAfe.bits[0] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[1] <= receiver.io.txMbAfe.bits[1] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[2] <= receiver.io.txMbAfe.bits[2] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[3] <= receiver.io.txMbAfe.bits[3] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[4] <= receiver.io.txMbAfe.bits[4] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[5] <= receiver.io.txMbAfe.bits[5] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[6] <= receiver.io.txMbAfe.bits[6] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[7] <= receiver.io.txMbAfe.bits[7] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[8] <= receiver.io.txMbAfe.bits[8] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[9] <= receiver.io.txMbAfe.bits[9] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[10] <= receiver.io.txMbAfe.bits[10] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[11] <= receiver.io.txMbAfe.bits[11] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[12] <= receiver.io.txMbAfe.bits[12] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[13] <= receiver.io.txMbAfe.bits[13] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[14] <= receiver.io.txMbAfe.bits[14] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.bits[15] <= receiver.io.txMbAfe.bits[15] @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.rx_user.txData.valid <= receiver.io.txMbAfe.valid @[src/main/scala/mbafe/MbAfe.scala 373:25]
    receiver.io.txMbAfe.ready <= io.rx_user.txData.ready @[src/main/scala/mbafe/MbAfe.scala 373:25]
    io.clkn_out <= receiver.io.clkn_out @[src/main/scala/mbafe/MbAfe.scala 375:17]
    io.tx_user.txData.bits[0] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[1] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[2] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[3] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[4] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[5] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[6] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[7] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[8] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[9] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[10] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[11] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[12] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[13] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[14] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.bits[15] <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 377:28]
    io.tx_user.txData.valid <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 378:29]
    io.rx_user.rxData.ready <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 379:29]
    io.tx_user.txFreqSel <= UInt<2>("h3") @[src/main/scala/mbafe/MbAfe.scala 381:26]
    io.tx_user.rxEn <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 382:21]
    io.rx_user.txFreqSel <= UInt<2>("h3") @[src/main/scala/mbafe/MbAfe.scala 383:26]
    io.rx_user.rxEn <= UInt<1>("h0") @[src/main/scala/mbafe/MbAfe.scala 384:21]

